// Generated by stratus_hls 19.12-s100  (91710.131054)
// Sun Apr 24 13:23:03 2022
// from ../DFT_compute.cpp

`timescale 1ps / 1ps

      
module DFT_compute(i_clk, i_rst, i_real_busy, i_real_vld, i_real_data_man, i_real_data_exp, i_real_data_sign, o_dft_real_busy, o_dft_real_vld, o_dft_real_data_man, o_dft_real_data_exp, o_dft_real_data_sign, o_dft_imag_busy, o_dft_imag_vld, o_dft_imag_data_man, o_dft_imag_data_exp, o_dft_imag_data_sign);

      input i_clk;
      input i_rst;
      input i_real_vld;
      input [22:0] i_real_data_man;
      input [7:0] i_real_data_exp;
      input i_real_data_sign;
      input o_dft_real_busy;
      input o_dft_imag_busy;
      output i_real_busy;
      output o_dft_real_vld;
      output [22:0] o_dft_real_data_man;
      reg [22:0] o_dft_real_data_man;
      output [7:0] o_dft_real_data_exp;
      reg [7:0] o_dft_real_data_exp;
      output o_dft_real_data_sign;
      reg o_dft_real_data_sign;
      output o_dft_imag_vld;
      output [22:0] o_dft_imag_data_man;
      reg [22:0] o_dft_imag_data_man;
      output [7:0] o_dft_imag_data_exp;
      reg [7:0] o_dft_imag_data_exp;
      output o_dft_imag_data_sign;
      reg o_dft_imag_data_sign;
      reg o_dft_imag_m_req_m_prev_trig_req;
      reg o_dft_imag_m_unacked_req;
      wire DFT_compute_Xor_1Ux1U_1U_1_8_out1;
      wire DFT_compute_Or_1Ux1U_1U_4_9_out1;
      reg o_dft_real_m_req_m_prev_trig_req;
      reg o_dft_real_m_unacked_req;
      wire DFT_compute_Xor_1Ux1U_1U_1_4_out1;
      wire DFT_compute_Or_1Ux1U_1U_4_5_out1;
      reg DFT_compute_N_Muxb_1_2_0_4_1_out1;
      reg i_real_m_unvalidated_req;
      wire DFT_compute_gen_busy_r_1_2_gnew_req;
      wire DFT_compute_gen_busy_r_1_2_gdiv;
      wire DFT_compute_gen_busy_r_1_2_gen_busy_i_real_m_data_is_invalid_next;
      reg[5:0] global_state_next;
      reg[4:0] sreg_1;
      /*signed*/reg[1:0] u_4084;
      /*signed*/reg[2:0] u_4083;
      /*signed*/reg[3:0] u_4082;
      wire[5:0] t_5;
      wire[23:0] DFT_compute_int_to_cynw_cm_float_4_16_cizManp1_i3;
      /*signed*/reg[4:0] u_4081;
      reg[22:0] u_4080;
      wire DFT_compute_int_to_cynw_cm_float_4_16_amtmp019;
      reg[31:0] DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3;
      wire[31:0] t_4;
      /*signed*/wire[6:0] t_3;
      /*signed*/reg[5:0] DFT_compute_int_to_cynw_cm_float_4_16_cil_i3;
      /*signed*/wire[6:0] t_2;
      wire DFT_compute_int_to_cynw_cm_float_4_16_cizSign_i3;
      /*signed*/reg[5:0] DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3;
      wire DFT_compute_int_to_cynw_cm_float_4_16_amtmp020;
      wire[22:0] DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3;
      wire[7:0] s_reg_75;
      reg DFT_compute_Not_1U_1U_4_29_in1;
      reg gs_ctrl41;
      wire DFT_compute_Not_1U_1U_4_26_in1;
      reg[31:0] sreg_4;
      reg gs_ctrl38;
      reg[1:0] gs_ctrl35;
      wire DFT_compute_Not_1U_1U_4_26_out1;
      wire DFT_compute_Not_1U_1U_4_29_out1;
      reg[31:0] sreg_3;
      reg[2:0] gs_ctrl32;
      reg[2:0] gs_ctrl29;
      wire[7:0] s_reg_76;
      reg[7:0] DFT_compute_Add_8Ux1U_8U_4_19_in2;
      reg gs_ctrl28;
      reg[2:0] gs_ctrl27;
      wire DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_sign;
      reg[7:0] DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_exp;
      reg[22:0] DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_man;
      /*signed*/wire[8:0] DFT_compute_int_to_cynw_cm_float_4_16_in1;
      /*signed*/wire[4:0] DFT_compute_LeftShift_2Sx2U_5S_4_15_out1;
      reg[1:0] DFT_compute_LeftShift_2Sx2U_5S_4_15_in1;
      reg gs_ctrl26;
      reg[2:0] DFT_compute_LessThan_3Ux4U_1U_4_13_in1_slice;
      reg[2:0] DFT_compute_LessThan_3Ux4U_1U_4_13_in2;
      reg gs_ctrl24;
      reg[1:0] gs_ctrl23;
      reg[3:0] gs_ctrl22;
      reg[1:0] gs_ctrl19;
      reg[3:0] gs_ctrl18;
      reg[1:0] gs_ctrl11;
      reg[3:0] gs_ctrl10;
      reg[1:0] gs_ctrl9;
      reg[2:0] gs_ctrl8;
      reg[1:0] gs_ctrl3;
      reg[3:0] gs_ctrl2;
      reg[2:0] gs_ctrl1;
      reg[2:0] gs_ctrl0;
      reg[22:0] s_reg_97;
      reg[7:0] s_reg_96;
      reg s_reg_95;
      reg[31:0] s_reg_94;
      reg[7:0] s_reg_84;
      wire[7:0] DFT_compute_Add_8Ux1U_8U_4_19_out1;
      reg[22:0] s_reg_79;
      reg[7:0] s_reg_78;
      reg s_reg_77;
      wire[2:0] DFT_compute_Add_2Ux1U_3U_4_17_out1;
      reg[2:0] s_reg_74;
      reg[31:0] sreg_2;
      wire DFT_compute_LessThan_3Ux4U_1U_4_13_out1;
      wire[3:0] DFT_compute_Add_3Ux1U_4U_4_40_out1;
      wire[3:0] DFT_compute_Add_3Ux3U_4U_4_24_out1;
      reg[2:0] s_reg_72_slice;
      wire[2:0] DFT_compute_gen_busy_r_1_2_out1;
      wire DFT_compute_And_1Ux1U_1U_1_6_out1;
      wire DFT_compute_And_1Ux1U_1U_1_10_out1;
      wire DFT_compute_Not_1U_1U_1_11_out1;
      reg o_dft_imag_m_req_m_trig_req;
      wire DFT_compute_Not_1U_1U_1_7_out1;
      reg o_dft_real_m_req_m_trig_req;
      wire[3:0] DFT_compute_Add_3Ux1U_4U_4_12_out1;
      reg i_real_m_busy_req_0;
      wire[7:0] DFT_compute_Add_8Ux8U_8U_4_37_out1;
      reg[7:0] s_reg_82;
      wire DFT_compute_LessThan_8Ux8U_1U_4_20_out1;
      reg s_reg_83;
      wire DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1;
      wire[31:0] DFT_compute_int_to_cynw_cm_float_4_16_out1;
      wire[3:0] DFT_compute_Add_3Ux1U_4U_4_14_out1;
      reg[5:0] global_state;
      reg stall0;
      reg DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign;
      reg[7:0] DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp;
      reg[22:0] DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man;
      reg DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign;
      reg[7:0] DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp;
      reg[22:0] DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man;
      wire[31:0] DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x;
      wire[36:0] DFT_compute_cynw_cm_float_cos_E8_M23_0_22_x;
      wire DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_sign;
      wire[7:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_exp;
      wire[22:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_man;
      wire DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_sign;
      wire[7:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_exp;
      wire[22:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_man;
      reg DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept;
      wire[31:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x;
      reg DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign;
      reg[7:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp;
      reg[22:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man;
      reg DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_sign;
      reg[7:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_exp;
      reg[22:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_man;
      wire[31:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x;
      reg s_reg_73;
      reg[7:0] s_reg_80;
      reg[22:0] s_reg_81;
      wire[36:0] DFT_compute_cynw_cm_float_sin_E8_M23_0_23_x;
      reg[7:0] temp_imag_exp_DIN;
      reg temp_imag_exp_CE;
      reg temp_imag_exp_RW;
      reg[2:0] temp_imag_exp_in1;
      wire[7:0] temp_imag_exp_out1;
      reg[22:0] temp_imag_man_DIN;
      reg temp_imag_man_CE;
      reg temp_imag_man_RW;
      reg[2:0] temp_imag_man_in1;
      wire[22:0] temp_imag_man_out1;
      reg temp_imag_sign_DIN;
      reg temp_imag_sign_CE;
      reg temp_imag_sign_RW;
      reg[2:0] temp_imag_sign_in1;
      wire temp_imag_sign_out1;
      reg[7:0] temp_real_exp_DIN;
      reg temp_real_exp_CE;
      reg temp_real_exp_RW;
      reg[2:0] temp_real_exp_in1;
      wire[7:0] temp_real_exp_out1;
      reg[22:0] temp_real_man_DIN;
      reg temp_real_man_CE;
      reg temp_real_man_RW;
      reg[2:0] temp_real_man_in1;
      wire[22:0] temp_real_man_out1;
      reg temp_real_sign_DIN;
      reg temp_real_sign_CE;
      reg temp_real_sign_RW;
      reg[2:0] temp_real_sign_in1;
      wire temp_real_sign_out1;

         DFT_compute_RAM_8X1_1 temp_real_sign(
                                 .DIN( temp_real_sign_DIN ),
                                 .CE( temp_real_sign_CE ),
                                 .RW( temp_real_sign_RW ),
                                 .in1( temp_real_sign_in1 ),
                                 .out1( temp_real_sign_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_RAM_8X23_3 temp_real_man(
                                  .DIN( temp_real_man_DIN ),
                                  .CE( temp_real_man_CE ),
                                  .RW( temp_real_man_RW ),
                                  .in1( temp_real_man_in1 ),
                                  .out1( temp_real_man_out1 ),
                                  .clk( i_clk )
                                );

         DFT_compute_RAM_8X8_2 temp_real_exp(
                                 .DIN( temp_real_exp_DIN ),
                                 .CE( temp_real_exp_CE ),
                                 .RW( temp_real_exp_RW ),
                                 .in1( temp_real_exp_in1 ),
                                 .out1( temp_real_exp_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_RAM_8X1_1 temp_imag_sign(
                                 .DIN( temp_imag_sign_DIN ),
                                 .CE( temp_imag_sign_CE ),
                                 .RW( temp_imag_sign_RW ),
                                 .in1( temp_imag_sign_in1 ),
                                 .out1( temp_imag_sign_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_RAM_8X23_3 temp_imag_man(
                                  .DIN( temp_imag_man_DIN ),
                                  .CE( temp_imag_man_CE ),
                                  .RW( temp_imag_man_RW ),
                                  .in1( temp_imag_man_in1 ),
                                  .out1( temp_imag_man_out1 ),
                                  .clk( i_clk )
                                );

         DFT_compute_RAM_8X8_2 temp_imag_exp(
                                 .DIN( temp_imag_exp_DIN ),
                                 .CE( temp_imag_exp_CE ),
                                 .RW( temp_imag_exp_RW ),
                                 .in1( temp_imag_exp_in1 ),
                                 .out1( temp_imag_exp_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_cynw_cm_float_sin_E8_M23_0 DFT_compute_cynw_cm_float_sin_E8_M23_0_23(
                                                  .a_sign( s_reg_73 ),
                                                  .a_exp( s_reg_80 ),
                                                  .a_man( s_reg_81 ),
                                                  .x( DFT_compute_cynw_cm_float_sin_E8_M23_0_23_x )
                                                );

         DFT_compute_cynw_cm_float_mul_E8_M23_1 DFT_compute_cynw_cm_float_mul_E8_M23_1_25(
                                                  .a_sign( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign ),
                                                  .a_exp( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp ),
                                                  .a_man( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man ),
                                                  .b_sign( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_sign ),
                                                  .b_exp( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_exp ),
                                                  .b_man( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_man ),
                                                  .x( DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x )
                                                );

         DFT_compute_cynw_cm_float_div_ieee_E8_M23_0 DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18(
                                                       .clk( i_clk ),
                                                       .a_sign( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_sign ),
                                                       .a_exp( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_exp ),
                                                       .a_man( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_man ),
                                                       .b_sign( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_sign ),
                                                       .b_exp( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_exp ),
                                                       .b_man( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_man ),
                                                       .accept( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept ),
                                                       .x( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x )
                                                     );

         DFT_compute_cynw_cm_float_cos_E8_M23_0 DFT_compute_cynw_cm_float_cos_E8_M23_0_22(
                                                  .a_sign( s_reg_73 ),
                                                  .a_exp( s_reg_80 ),
                                                  .a_man( s_reg_81 ),
                                                  .x( DFT_compute_cynw_cm_float_cos_E8_M23_0_22_x )
                                                );

         DFT_compute_cynw_cm_float_add2_E8_M23_1 DFT_compute_cynw_cm_float_add2_E8_M23_1_21(
                                                   .a_sign( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign ),
                                                   .a_exp( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp ),
                                                   .a_man( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man ),
                                                   .b_sign( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign ),
                                                   .b_exp( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp ),
                                                   .b_man( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man ),
                                                   .x( DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x )
                                                 );

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_data_sign
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd05, 6'd28, 6'd37:                      begin
                        o_dft_imag_data_sign <= temp_imag_sign_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_o_dft_imag_data_exp
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd05, 6'd28, 6'd37:                      begin
                        o_dft_imag_data_exp <= temp_imag_exp_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_o_dft_imag_data_man
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd05, 6'd28, 6'd37:                      begin
                        o_dft_imag_data_man <= temp_imag_man_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i0c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_data_sign
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd05, 6'd29, 6'd37:                      begin
                        o_dft_real_data_sign <= temp_real_sign_out1;
                     end
                     
                     6'd08:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3]) begin
                           o_dft_real_data_sign <= DFT_compute_int_to_cynw_cm_float_4_16_out1[31];
                        end
                     end
                     
                     6'd17:                      begin
                        if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                           o_dft_real_data_sign <= DFT_compute_int_to_cynw_cm_float_4_16_out1[31];
                        end
                     end
                     
                     6'd35:                      begin
                        if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                           o_dft_real_data_sign <= DFT_compute_int_to_cynw_cm_float_4_16_out1[31];
                        end
                     end
                     
                     6'd36:                      begin
                        if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                           o_dft_real_data_sign <= DFT_compute_int_to_cynw_cm_float_4_16_out1[31];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx3i0c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_o_dft_real_data_exp
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd05, 6'd29, 6'd37:                      begin
                        o_dft_real_data_exp <= temp_real_exp_out1;
                     end
                     
                     6'd08:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3]) begin
                           o_dft_real_data_exp <= DFT_compute_int_to_cynw_cm_float_4_16_out1[30:23];
                        end
                     end
                     
                     6'd17:                      begin
                        if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                           o_dft_real_data_exp <= DFT_compute_int_to_cynw_cm_float_4_16_out1[30:23];
                        end
                     end
                     
                     6'd34:                      begin
                        o_dft_real_data_exp <= {3'b000, DFT_compute_Add_8Ux8U_8U_4_37_out1[7:3]};
                     end
                     
                     6'd35:                      begin
                        if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                           o_dft_real_data_exp <= DFT_compute_int_to_cynw_cm_float_4_16_out1[30:23];
                        end
                     end
                     
                     6'd36:                      begin
                        if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                           o_dft_real_data_exp <= DFT_compute_int_to_cynw_cm_float_4_16_out1[30:23];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_23bx2i0c
         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_o_dft_real_data_man
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd05, 6'd29, 6'd37:                      begin
                        o_dft_real_data_man <= temp_real_man_out1;
                     end
                     
                     6'd08:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3]) begin
                           o_dft_real_data_man <= DFT_compute_int_to_cynw_cm_float_4_16_out1[22:0];
                        end
                     end
                     
                     6'd17:                      begin
                        if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                           o_dft_real_data_man <= DFT_compute_int_to_cynw_cm_float_4_16_out1[22:0];
                        end
                     end
                     
                     6'd35:                      begin
                        if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                           o_dft_real_data_man <= DFT_compute_int_to_cynw_cm_float_4_16_out1[22:0];
                        end
                     end
                     
                     6'd36:                      begin
                        if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                           o_dft_real_data_man <= DFT_compute_int_to_cynw_cm_float_4_16_out1[22:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_real_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_real_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        6'd02:                         begin
                           i_real_m_busy_req_0 <= 1'd0;
                        end
                        
                        6'd03:                         begin
                           i_real_m_busy_req_0 <= 1'd1;
                        end
                        
                        6'd04:                         begin
                           if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           end
                           else begin
                              i_real_m_busy_req_0 <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_dft_real_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        6'd37:                         begin
                           o_dft_real_m_req_m_trig_req <= DFT_compute_Not_1U_1U_1_7_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_dft_imag_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        6'd38:                         begin
                           o_dft_imag_m_req_m_trig_req <= DFT_compute_Not_1U_1U_1_11_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx4i1c
         always @(DFT_compute_gen_busy_r_1_2_out1[0] or DFT_compute_And_1Ux1U_1U_1_6_out1 or DFT_compute_And_1Ux1U_1U_1_10_out1 or global_state)
          begin :drive_stall0
            case (global_state) 

               6'd03:                begin
                  stall0 = DFT_compute_gen_busy_r_1_2_out1[0];
               end
               
               6'd38:                begin
                  stall0 = DFT_compute_And_1Ux1U_1U_1_6_out1;
               end
               
               6'd39:                begin
                  stall0 = DFT_compute_And_1Ux1U_1U_1_10_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_3bx5i1c
         // resource: regr_en_3
         always @(posedge i_clk)
          begin :drive_s_reg_72_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd02, 6'd17:                      begin
                        s_reg_72_slice <= 3'd0;
                     end
                     
                     6'd04:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           s_reg_72_slice <= 3'd0;
                        end
                        else begin
                           s_reg_72_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                        end
                     end
                     
                     6'd08:                      begin
                        s_reg_72_slice <= DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
                     end
                     
                     6'd27:                      begin
                        s_reg_72_slice <= DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
                     end
                     
                     6'd35:                      begin
                        case (o_dft_real_data_exp[4:0]) 

                           5'd00:                            begin
                              s_reg_72_slice <= DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
                           end
                           
                           default:                            begin
                              s_reg_72_slice <= 3'd0;
                           end
                           
                        endcase

                     end
                     
                     6'd36:                      begin
                        if (5'd00 != s_reg_82[7:3]) begin
                           s_reg_72_slice <= 3'd0;
                        end
                     end
                     
                     6'd39:                      begin
                        s_reg_72_slice <= DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx3i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_73
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd04:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           s_reg_73 <= DFT_compute_LessThan_3Ux4U_1U_4_13_out1;
                        end
                     end
                     
                     6'd08:                      begin
                        s_reg_73 <= DFT_compute_LessThan_3Ux4U_1U_4_13_out1;
                     end
                     
                     6'd26:                      begin
                        s_reg_73 <= 1'b0;
                     end
                     
                     6'd36:                      begin
                        /* state45 */
                        s_reg_73 <= sreg_2[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_3bx2i1c
         // resource: regr_en_3
         always @(posedge i_clk)
          begin :drive_s_reg_74
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd08:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3]) begin
                           s_reg_74 <= 3'd1;
                        end
                     end
                     
                     6'd16, 6'd25:                      begin
                        s_reg_74 <= DFT_compute_Add_2Ux1U_3U_4_17_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_77
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26:                      begin
                        s_reg_77 <= DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_78
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26:                      begin
                        s_reg_78 <= DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_79
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26:                      begin
                        s_reg_79 <= DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx2i1c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_80
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26:                      begin
                        s_reg_80 <= 8'd000;
                     end
                     
                     6'd36:                      begin
                        s_reg_80 <= sreg_2[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_23bx2i1c
         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_81
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26:                      begin
                        s_reg_81 <= 23'd0000000;
                     end
                     
                     6'd36:                      begin
                        s_reg_81 <= sreg_2[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_82
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26, 6'd36:                      begin
                        s_reg_82 <= DFT_compute_Add_8Ux1U_8U_4_19_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_83
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26, 6'd36:                      begin
                        s_reg_83 <= DFT_compute_LessThan_8Ux8U_1U_4_20_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx4i1c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_84
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd04:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           s_reg_84 <= 8'd000;
                        end
                     end
                     
                     6'd08:                      begin
                        s_reg_84 <= {{{5'd00, DFT_compute_Add_3Ux1U_4U_4_14_out1[0]}, DFT_compute_Add_3Ux1U_4U_4_14_out1[1]}, DFT_compute_Add_3Ux1U_4U_4_14_out1[2]};
                     end
                     
                     6'd26:                      begin
                        s_reg_84 <= 8'd000;
                     end
                     
                     6'd34:                      begin
                        s_reg_84 <= DFT_compute_Add_8Ux8U_8U_4_37_out1;
                     end
                     
                     6'd36:                      begin
                        s_reg_84 <= s_reg_82;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_94
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd28, 6'd30:                      begin
                        s_reg_94 <= DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_95
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd29:                      begin
                        s_reg_95 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_96
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd29:                      begin
                        s_reg_96 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_97
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd29:                      begin
                        s_reg_97 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_3bx5i1c
         always @(s_reg_84[2:0] or DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or DFT_compute_Add_3Ux1U_4U_4_40_out1 or gs_ctrl0 or s_reg_72_slice)
          begin :drive_temp_real_man_in1
            case (gs_ctrl0) 

               3'd1:                begin
                  temp_real_man_in1 = s_reg_72_slice;
               end
               
               3'd2:                begin
                  temp_real_man_in1 = s_reg_84[2:0];
               end
               
               3'd3:                begin
                  temp_real_man_in1 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
               end
               
               3'd4:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     /* state3 */
                     temp_real_man_in1 = 3'd0;
                  end
                  else begin
                     temp_real_man_in1 = DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                  end
               end
               
               default:                begin
                  /* state4 */
                  temp_real_man_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_23bx5i1c
         always @(o_dft_real_data_man or i_real_data_man or temp_real_man_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[22:0] or gs_ctrl1)
          begin :drive_temp_real_man_DIN
            case (gs_ctrl1) 

               3'd1:                begin
                  temp_real_man_DIN = i_real_data_man;
               end
               
               3'd2:                begin
                  temp_real_man_DIN = temp_real_man_out1;
               end
               
               3'd3:                begin
                  temp_real_man_DIN = o_dft_real_data_man;
               end
               
               3'd4:                begin
                  temp_real_man_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[22:0];
               end
               
               default:                begin
                  temp_real_man_DIN = 23'd0000000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(o_dft_real_data_exp[4:0] or stall0 or s_reg_73 or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_13_out1 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl2)
          begin :drive_temp_real_man_CE
            if (stall0) begin
               temp_real_man_CE = 1'b0;
            end
            else begin
               case (gs_ctrl2) 

                  4'd01:                   begin
                     temp_real_man_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     if (s_reg_73) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  4'd04:                   begin
                     if (s_reg_73) begin
                        temp_real_man_CE = s_reg_73;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                        temp_real_man_CE = 1'b0;
                     end
                     else begin
                        temp_real_man_CE = 1'b1;
                     end
                  end
                  
                  4'd07:                   begin
                     if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  4'd08:                   begin
                     if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_man_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_73 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or gs_ctrl3)
          begin :drive_temp_real_man_RW
            if (stall0) begin
               temp_real_man_RW = 1'b0;
            end
            else begin
               case (gs_ctrl3) 

                  2'd1:                   begin
                     temp_real_man_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_73) begin
                        temp_real_man_RW = 1'b1;
                     end
                     else begin
                        temp_real_man_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                        temp_real_man_RW = 1'b1;
                     end
                     else begin
                        temp_real_man_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_man_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i1c
         always @(s_reg_84[2:0] or DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or DFT_compute_Add_3Ux1U_4U_4_40_out1 or gs_ctrl0 or s_reg_72_slice)
          begin :drive_temp_real_exp_in1
            case (gs_ctrl0) 

               3'd1:                begin
                  temp_real_exp_in1 = s_reg_72_slice;
               end
               
               3'd2:                begin
                  temp_real_exp_in1 = s_reg_84[2:0];
               end
               
               3'd3:                begin
                  temp_real_exp_in1 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
               end
               
               3'd4:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     temp_real_exp_in1 = 3'd0;
                  end
                  else begin
                     temp_real_exp_in1 = DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                  end
               end
               
               default:                begin
                  temp_real_exp_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_8bx5i1c
         always @(o_dft_real_data_exp or i_real_data_exp or temp_real_exp_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[30:23] or gs_ctrl1)
          begin :drive_temp_real_exp_DIN
            case (gs_ctrl1) 

               3'd1:                begin
                  temp_real_exp_DIN = i_real_data_exp;
               end
               
               3'd2:                begin
                  temp_real_exp_DIN = temp_real_exp_out1;
               end
               
               3'd3:                begin
                  temp_real_exp_DIN = o_dft_real_data_exp;
               end
               
               3'd4:                begin
                  temp_real_exp_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[30:23];
               end
               
               default:                begin
                  temp_real_exp_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(o_dft_real_data_exp[4:0] or stall0 or s_reg_73 or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_13_out1 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl2)
          begin :drive_temp_real_exp_CE
            if (stall0) begin
               temp_real_exp_CE = 1'b0;
            end
            else begin
               case (gs_ctrl2) 

                  4'd01:                   begin
                     temp_real_exp_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     if (s_reg_73) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd04:                   begin
                     if (s_reg_73) begin
                        temp_real_exp_CE = s_reg_73;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                        temp_real_exp_CE = 1'b0;
                     end
                     else begin
                        temp_real_exp_CE = 1'b1;
                     end
                  end
                  
                  4'd07:                   begin
                     if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd08:                   begin
                     if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_exp_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_73 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or gs_ctrl3)
          begin :drive_temp_real_exp_RW
            if (stall0) begin
               temp_real_exp_RW = 1'b0;
            end
            else begin
               case (gs_ctrl3) 

                  2'd1:                   begin
                     temp_real_exp_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_73) begin
                        temp_real_exp_RW = 1'b1;
                     end
                     else begin
                        temp_real_exp_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                        temp_real_exp_RW = 1'b1;
                     end
                     else begin
                        temp_real_exp_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_exp_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i1c
         always @(o_dft_real_data_exp[4:0] or s_reg_84[2:0] or DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0] or DFT_compute_Add_3Ux1U_4U_4_40_out1 or gs_ctrl8 or s_reg_72_slice)
          begin :drive_temp_imag_man_in1
            case (gs_ctrl8) 

               3'd1:                begin
                  temp_imag_man_in1 = s_reg_84[2:0];
               end
               
               3'd2:                begin
                  temp_imag_man_in1 = s_reg_72_slice;
               end
               
               3'd3:                begin
                  temp_imag_man_in1 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
               end
               
               3'd4:                begin
                  temp_imag_man_in1 = DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
               end
               
               3'd5:                begin
                  case (o_dft_real_data_exp[4:0]) 

                     5'd00:                      begin
                        temp_imag_man_in1 = DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
                     end
                     
                     default:                      begin
                        temp_imag_man_in1 = 3'd0;
                     end
                     
                  endcase

               end
               
               3'd6:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     temp_imag_man_in1 = 3'd0;
                  end
                  else begin
                     temp_imag_man_in1 = DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                  end
               end
               
               default:                begin
                  temp_imag_man_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_23bx4i1c
         always @(o_dft_imag_data_man or temp_imag_man_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[22:0] or gs_ctrl9)
          begin :drive_temp_imag_man_DIN
            case (gs_ctrl9) 

               2'd1:                begin
                  temp_imag_man_DIN = temp_imag_man_out1;
               end
               
               2'd2:                begin
                  temp_imag_man_DIN = o_dft_imag_data_man;
               end
               
               2'd3:                begin
                  temp_imag_man_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[22:0];
               end
               
               default:                begin
                  temp_imag_man_DIN = 23'd0000000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(o_dft_real_data_exp[4:0] or stall0 or s_reg_73 or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_13_out1 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl10)
          begin :drive_temp_imag_man_CE
            if (stall0) begin
               temp_imag_man_CE = 1'b0;
            end
            else begin
               case (gs_ctrl10) 

                  4'd01:                   begin
                     temp_imag_man_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_imag_man_CE = 1'b1;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     if (s_reg_73) begin
                        temp_imag_man_CE = 1'b1;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  4'd04:                   begin
                     if (s_reg_73) begin
                        temp_imag_man_CE = s_reg_73;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_imag_man_CE = 1'b1;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                        temp_imag_man_CE = 1'b0;
                     end
                     else begin
                        temp_imag_man_CE = 1'b1;
                     end
                  end
                  
                  4'd07:                   begin
                     case (o_dft_real_data_exp[4:0]) 

                        5'd00:                         begin
                           temp_imag_man_CE = 1'b1;
                        end
                        
                        default:                         begin
                           if (!s_reg_83 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                              temp_imag_man_CE = 1'b1;
                           end
                           else begin
                              temp_imag_man_CE = 1'b0;
                           end
                        end
                        
                     endcase

                  end
                  
                  4'd08:                   begin
                     if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_imag_man_CE = 1'b1;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_man_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_73 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or gs_ctrl11)
          begin :drive_temp_imag_man_RW
            if (stall0) begin
               temp_imag_man_RW = 1'b0;
            end
            else begin
               case (gs_ctrl11) 

                  2'd1:                   begin
                     temp_imag_man_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_73) begin
                        temp_imag_man_RW = 1'b1;
                     end
                     else begin
                        temp_imag_man_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                        temp_imag_man_RW = 1'b1;
                     end
                     else begin
                        temp_imag_man_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_man_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i1c
         always @(o_dft_real_data_exp[4:0] or s_reg_84[2:0] or DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0] or DFT_compute_Add_3Ux1U_4U_4_40_out1 or gs_ctrl8 or s_reg_72_slice)
          begin :drive_temp_imag_exp_in1
            case (gs_ctrl8) 

               3'd1:                begin
                  temp_imag_exp_in1 = s_reg_84[2:0];
               end
               
               3'd2:                begin
                  temp_imag_exp_in1 = s_reg_72_slice;
               end
               
               3'd3:                begin
                  temp_imag_exp_in1 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
               end
               
               3'd4:                begin
                  temp_imag_exp_in1 = DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
               end
               
               3'd5:                begin
                  case (o_dft_real_data_exp[4:0]) 

                     5'd00:                      begin
                        temp_imag_exp_in1 = DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
                     end
                     
                     default:                      begin
                        temp_imag_exp_in1 = 3'd0;
                     end
                     
                  endcase

               end
               
               3'd6:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     temp_imag_exp_in1 = 3'd0;
                  end
                  else begin
                     temp_imag_exp_in1 = DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                  end
               end
               
               default:                begin
                  temp_imag_exp_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_8bx4i1c
         always @(o_dft_imag_data_exp or temp_imag_exp_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[30:23] or gs_ctrl9)
          begin :drive_temp_imag_exp_DIN
            case (gs_ctrl9) 

               2'd1:                begin
                  temp_imag_exp_DIN = temp_imag_exp_out1;
               end
               
               2'd2:                begin
                  temp_imag_exp_DIN = o_dft_imag_data_exp;
               end
               
               2'd3:                begin
                  temp_imag_exp_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[30:23];
               end
               
               default:                begin
                  temp_imag_exp_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(o_dft_real_data_exp[4:0] or stall0 or s_reg_73 or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_13_out1 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl10)
          begin :drive_temp_imag_exp_CE
            if (stall0) begin
               temp_imag_exp_CE = 1'b0;
            end
            else begin
               case (gs_ctrl10) 

                  4'd01:                   begin
                     temp_imag_exp_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_imag_exp_CE = 1'b1;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     if (s_reg_73) begin
                        temp_imag_exp_CE = 1'b1;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd04:                   begin
                     if (s_reg_73) begin
                        temp_imag_exp_CE = s_reg_73;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_imag_exp_CE = 1'b1;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                        temp_imag_exp_CE = 1'b0;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b1;
                     end
                  end
                  
                  4'd07:                   begin
                     case (o_dft_real_data_exp[4:0]) 

                        5'd00:                         begin
                           temp_imag_exp_CE = 1'b1;
                        end
                        
                        default:                         begin
                           if (!s_reg_83 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                              temp_imag_exp_CE = 1'b1;
                           end
                           else begin
                              temp_imag_exp_CE = 1'b0;
                           end
                        end
                        
                     endcase

                  end
                  
                  4'd08:                   begin
                     if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_imag_exp_CE = 1'b1;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_exp_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_73 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or gs_ctrl11)
          begin :drive_temp_imag_exp_RW
            if (stall0) begin
               temp_imag_exp_RW = 1'b0;
            end
            else begin
               case (gs_ctrl11) 

                  2'd1:                   begin
                     temp_imag_exp_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_73) begin
                        temp_imag_exp_RW = 1'b1;
                     end
                     else begin
                        temp_imag_exp_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                        temp_imag_exp_RW = 1'b1;
                     end
                     else begin
                        temp_imag_exp_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_exp_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i1c
         always @(s_reg_84[2:0] or DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or DFT_compute_Add_3Ux1U_4U_4_40_out1 or gs_ctrl0 or s_reg_72_slice)
          begin :drive_temp_real_sign_in1
            case (gs_ctrl0) 

               3'd1:                begin
                  temp_real_sign_in1 = s_reg_72_slice;
               end
               
               3'd2:                begin
                  temp_real_sign_in1 = s_reg_84[2:0];
               end
               
               3'd3:                begin
                  temp_real_sign_in1 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
               end
               
               3'd4:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     temp_real_sign_in1 = 3'd0;
                  end
                  else begin
                     temp_real_sign_in1 = DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                  end
               end
               
               default:                begin
                  temp_real_sign_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_1bx5i1c
         always @(o_dft_real_data_sign or i_real_data_sign or temp_real_sign_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[31] or gs_ctrl1)
          begin :drive_temp_real_sign_DIN
            case (gs_ctrl1) 

               3'd1:                begin
                  temp_real_sign_DIN = i_real_data_sign;
               end
               
               3'd2:                begin
                  temp_real_sign_DIN = temp_real_sign_out1;
               end
               
               3'd3:                begin
                  temp_real_sign_DIN = o_dft_real_data_sign;
               end
               
               3'd4:                begin
                  temp_real_sign_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[31];
               end
               
               default:                begin
                  temp_real_sign_DIN = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(o_dft_real_data_exp[4:0] or stall0 or s_reg_73 or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_13_out1 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl18)
          begin :drive_temp_real_sign_CE
            if (stall0) begin
               temp_real_sign_CE = 1'b0;
            end
            else begin
               case (gs_ctrl18) 

                  4'd01:                   begin
                     temp_real_sign_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     if (s_reg_73) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd04:                   begin
                     if (s_reg_73) begin
                        temp_real_sign_CE = s_reg_73;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                        temp_real_sign_CE = 1'b0;
                     end
                     else begin
                        temp_real_sign_CE = 1'b1;
                     end
                  end
                  
                  4'd07:                   begin
                     if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd08:                   begin
                     if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_sign_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_73 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or gs_ctrl19)
          begin :drive_temp_real_sign_RW
            if (stall0) begin
               temp_real_sign_RW = 1'b0;
            end
            else begin
               case (gs_ctrl19) 

                  2'd1:                   begin
                     temp_real_sign_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_73) begin
                        temp_real_sign_RW = 1'b1;
                     end
                     else begin
                        temp_real_sign_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                        temp_real_sign_RW = 1'b1;
                     end
                     else begin
                        temp_real_sign_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_sign_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i1c
         always @(o_dft_real_data_exp[4:0] or s_reg_84[2:0] or DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0] or DFT_compute_Add_3Ux1U_4U_4_40_out1 or gs_ctrl8 or s_reg_72_slice)
          begin :drive_temp_imag_sign_in1
            case (gs_ctrl8) 

               3'd1:                begin
                  temp_imag_sign_in1 = s_reg_84[2:0];
               end
               
               3'd2:                begin
                  temp_imag_sign_in1 = s_reg_72_slice;
               end
               
               3'd3:                begin
                  temp_imag_sign_in1 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
               end
               
               3'd4:                begin
                  temp_imag_sign_in1 = DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
               end
               
               3'd5:                begin
                  case (o_dft_real_data_exp[4:0]) 

                     5'd00:                      begin
                        temp_imag_sign_in1 = DFT_compute_Add_3Ux3U_4U_4_24_out1[2:0];
                     end
                     
                     default:                      begin
                        temp_imag_sign_in1 = 3'd0;
                     end
                     
                  endcase

               end
               
               3'd6:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     temp_imag_sign_in1 = 3'd0;
                  end
                  else begin
                     temp_imag_sign_in1 = DFT_compute_Add_3Ux1U_4U_4_40_out1[2:0];
                  end
               end
               
               default:                begin
                  temp_imag_sign_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_1bx4i1c
         always @(o_dft_imag_data_sign or temp_imag_sign_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[31] or gs_ctrl9)
          begin :drive_temp_imag_sign_DIN
            case (gs_ctrl9) 

               2'd1:                begin
                  temp_imag_sign_DIN = temp_imag_sign_out1;
               end
               
               2'd2:                begin
                  temp_imag_sign_DIN = o_dft_imag_data_sign;
               end
               
               2'd3:                begin
                  temp_imag_sign_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x[31];
               end
               
               default:                begin
                  temp_imag_sign_DIN = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(o_dft_real_data_exp[4:0] or stall0 or s_reg_73 or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_13_out1 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl22)
          begin :drive_temp_imag_sign_CE
            if (stall0) begin
               temp_imag_sign_CE = 1'b0;
            end
            else begin
               case (gs_ctrl22) 

                  4'd01:                   begin
                     temp_imag_sign_CE = 1'b1;
                  end
                  
                  4'd02:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_imag_sign_CE = 1'b1;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd03:                   begin
                     if (s_reg_73) begin
                        temp_imag_sign_CE = 1'b1;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd04:                   begin
                     if (s_reg_73) begin
                        temp_imag_sign_CE = s_reg_73;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd05:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_13_out1) begin
                        temp_imag_sign_CE = 1'b1;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  4'd06:                   begin
                     if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                        temp_imag_sign_CE = 1'b0;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b1;
                     end
                  end
                  
                  4'd07:                   begin
                     case (o_dft_real_data_exp[4:0]) 

                        5'd00:                         begin
                           temp_imag_sign_CE = 1'b1;
                        end
                        
                        default:                         begin
                           if (!s_reg_83 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                              temp_imag_sign_CE = 1'b1;
                           end
                           else begin
                              temp_imag_sign_CE = 1'b0;
                           end
                        end
                        
                     endcase

                  end
                  
                  4'd08:                   begin
                     if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && !DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                        temp_imag_sign_CE = 1'b1;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_sign_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_73 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or gs_ctrl23)
          begin :drive_temp_imag_sign_RW
            if (stall0) begin
               temp_imag_sign_RW = 1'b0;
            end
            else begin
               case (gs_ctrl23) 

                  2'd1:                   begin
                     temp_imag_sign_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_73) begin
                        temp_imag_sign_RW = 1'b1;
                     end
                     else begin
                        temp_imag_sign_RW = 1'b0;
                     end
                  end
                  
                  2'd3:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                        temp_imag_sign_RW = 1'b1;
                     end
                     else begin
                        temp_imag_sign_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_sign_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: DFT_compute_Add_3Ux1U_4U_4  instance: DFT_compute_Add_3Ux1U_4U_4_12
         assign DFT_compute_Add_3Ux1U_4U_4_12_out1 = {1'b0, s_reg_72_slice} + 4'd01;

         // resource: mux_3bx2i1c
         always @(DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or gs_ctrl24)
          begin :drive_DFT_compute_LessThan_3Ux4U_1U_4_13_in2
            if (gs_ctrl24) begin
               DFT_compute_LessThan_3Ux4U_1U_4_13_in2 = DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0];
            end
            else begin
               DFT_compute_LessThan_3Ux4U_1U_4_13_in2 = 3'd0;
            end
         end

         // resource: mux_3bx2i1c
         always @(DFT_compute_Add_3Ux1U_4U_4_14_out1[2:0] or gs_ctrl24)
          begin :drive_DFT_compute_LessThan_3Ux4U_1U_4_13_in1_slice
            if (gs_ctrl24) begin
               DFT_compute_LessThan_3Ux4U_1U_4_13_in1_slice = {{DFT_compute_Add_3Ux1U_4U_4_14_out1[0], DFT_compute_Add_3Ux1U_4U_4_14_out1[1]}, DFT_compute_Add_3Ux1U_4U_4_14_out1[2]};
            end
            else begin
               DFT_compute_LessThan_3Ux4U_1U_4_13_in1_slice = 3'd0;
            end
         end

         // resource: DFT_compute_LessThan_3Ux4U_1U_4  instance: DFT_compute_LessThan_3Ux4U_1U_4_13
         assign DFT_compute_LessThan_3Ux4U_1U_4_13_out1 = {1'b0, DFT_compute_LessThan_3Ux4U_1U_4_13_in2} < {1'b0, DFT_compute_LessThan_3Ux4U_1U_4_13_in1_slice};

         // resource: DFT_compute_Add_3Ux1U_4U_4  instance: DFT_compute_Add_3Ux1U_4U_4_14
         assign DFT_compute_Add_3Ux1U_4U_4_14_out1 = {1'b0, s_reg_72_slice} + 4'd01;

         // resource: mux_2bx2i1c
         always @(s_reg_74[1:0] or gs_ctrl26)
          begin :drive_DFT_compute_LeftShift_2Sx2U_5S_4_15_in1
            if (gs_ctrl26) begin
               DFT_compute_LeftShift_2Sx2U_5S_4_15_in1 = s_reg_74[1:0];
            end
            else begin
               DFT_compute_LeftShift_2Sx2U_5S_4_15_in1 = 2'd1;
            end
         end

         // resource: DFT_compute_LeftShift_2Sx2U_5S_4  instance: DFT_compute_LeftShift_2Sx2U_5S_4_15
         assign DFT_compute_LeftShift_2Sx2U_5S_4_15_out1 = 5'd01 << DFT_compute_LeftShift_2Sx2U_5S_4_15_in1;

         // instance: drive_DFT_compute_int_to_cynw_cm_float_4_16_in1
         assign DFT_compute_int_to_cynw_cm_float_4_16_in1 = {{1'b0, { 3 {DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4]}}}, DFT_compute_LeftShift_2Sx2U_5S_4_15_out1};

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_out1 = {DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_sign, {DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_exp, DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_man}};

         // resource: DFT_compute_Add_2Ux1U_3U_4  instance: DFT_compute_Add_2Ux1U_3U_4_17
         assign DFT_compute_Add_2Ux1U_3U_4_17_out1 = {1'b0, s_reg_74[1:0]} + 3'd1;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_sign
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_sign = 1'b1;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_exp
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_exp = 8'd129;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_man
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_a_man = 23'd4788187;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_sign
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_sign = DFT_compute_int_to_cynw_cm_float_4_16_out1[31];

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_exp
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_exp = DFT_compute_int_to_cynw_cm_float_4_16_out1[30:23];

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_man
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_b_man = DFT_compute_int_to_cynw_cm_float_4_16_out1[22:0];

         // resource: mux_1bx2i2c
         always @(o_dft_real_data_exp[4:0] or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or gs_ctrl27)
          begin :drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept
            case (gs_ctrl27) 

               3'd1:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3]) begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b1;
                  end
                  else begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b0;
                  end
               end
               
               3'd2:                begin
                  if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b1;
                  end
                  else begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b0;
                  end
               end
               
               3'd3:                begin
                  if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b1;
                  end
                  else begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b0;
                  end
               end
               
               3'd4:                begin
                  if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1)) begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b1;
                  end
                  else begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b0;
                  end
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_accept = 1'b0;
               end
               
            endcase

         end

         // resource: mux_8bx2i1c
         always @(s_reg_82 or gs_ctrl28)
          begin :drive_DFT_compute_Add_8Ux1U_8U_4_19_in2
            if (gs_ctrl28) begin
               DFT_compute_Add_8Ux1U_8U_4_19_in2 = s_reg_82;
            end
            else begin
               DFT_compute_Add_8Ux1U_8U_4_19_in2 = 8'd000;
            end
         end

         // resource: DFT_compute_Add_8Ux1U_8U_4  instance: DFT_compute_Add_8Ux1U_8U_4_19
         assign DFT_compute_Add_8Ux1U_8U_4_19_out1 = DFT_compute_Add_8Ux1U_8U_4_19_in2 + 8'd001;

         // resource: DFT_compute_LessThan_8Ux8U_1U_4  instance: DFT_compute_LessThan_8Ux8U_1U_4_20
         assign DFT_compute_LessThan_8Ux8U_1U_4_20_out1 = DFT_compute_Add_8Ux1U_8U_4_19_out1 < s_reg_76;

         // resource: mux_1bx6i1c
         always @(s_reg_94[31] or temp_imag_sign_out1 or temp_real_sign_out1 or DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[31] or sreg_2[31] or gs_ctrl29)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign
            case (gs_ctrl29) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign = DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[31];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign = temp_real_sign_out1;
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign = s_reg_94[31];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign = temp_imag_sign_out1;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign = sreg_2[31];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_sign = 1'b0;
               end
               
            endcase

         end

         // resource: mux_8bx6i1c
         always @(s_reg_94[30:23] or temp_imag_exp_out1 or temp_real_exp_out1 or DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[30:23] or sreg_2[30:23] or gs_ctrl29)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp
            case (gs_ctrl29) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp = DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[30:23];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp = temp_real_exp_out1;
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp = s_reg_94[30:23];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp = temp_imag_exp_out1;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp = sreg_2[30:23];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_exp = 8'd000;
               end
               
            endcase

         end

         // resource: mux_23bx6i1c
         always @(s_reg_94[22:0] or temp_imag_man_out1 or temp_real_man_out1 or DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[22:0] or sreg_2[22:0] or gs_ctrl29)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man
            case (gs_ctrl29) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man = DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[22:0];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man = temp_real_man_out1;
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man = s_reg_94[22:0];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man = temp_imag_man_out1;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man = sreg_2[22:0];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_a_man = 23'd0000000;
               end
               
            endcase

         end

         // resource: mux_1bx7i0c
         always @(s_reg_77 or s_reg_95 or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[31] or DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[31] or DFT_compute_Not_1U_1U_4_26_out1 or DFT_compute_Not_1U_1U_4_29_out1 or sreg_3[31] or gs_ctrl32)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign
            case (gs_ctrl32) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = DFT_compute_Not_1U_1U_4_26_out1;
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = DFT_compute_Not_1U_1U_4_29_out1;
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[31];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = s_reg_95;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = sreg_3[31];
               end
               
               3'd6:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = s_reg_77;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_sign = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[31];
               end
               
            endcase

         end

         // resource: mux_8bx6i0c
         always @(s_reg_78 or s_reg_94[30:23] or s_reg_96 or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[30:23] or DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[30:23] or sreg_3[30:23] or gs_ctrl29)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp
            case (gs_ctrl29) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp = s_reg_94[30:23];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp = s_reg_96;
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp = DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[30:23];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp = sreg_3[30:23];
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp = s_reg_78;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_exp = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[30:23];
               end
               
            endcase

         end

         // resource: mux_23bx6i0c
         always @(s_reg_79 or s_reg_94[22:0] or s_reg_97 or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[22:0] or DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[22:0] or sreg_3[22:0] or gs_ctrl29)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man
            case (gs_ctrl29) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man = s_reg_94[22:0];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man = s_reg_97;
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man = DFT_compute_cynw_cm_float_mul_E8_M23_1_25_x[22:0];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man = sreg_3[22:0];
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man = s_reg_79;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_1_21_b_man = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_18_x[22:0];
               end
               
            endcase

         end

         // resource: DFT_compute_Add_3Ux3U_4U_4  instance: DFT_compute_Add_3Ux3U_4U_4_24
         assign DFT_compute_Add_3Ux3U_4U_4_24_out1 = {1'b0, s_reg_84[2:0]} + {1'b0, s_reg_76[2:0]};

         // resource: mux_1bx4i0c
         always @(o_dft_imag_data_sign or o_dft_real_data_sign or temp_imag_sign_out1 or temp_real_sign_out1 or gs_ctrl35)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign
            case (gs_ctrl35) 

               2'd1:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign = temp_real_sign_out1;
               end
               
               2'd2:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign = o_dft_imag_data_sign;
               end
               
               2'd3:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign = o_dft_real_data_sign;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_sign = temp_imag_sign_out1;
               end
               
            endcase

         end

         // resource: mux_8bx4i0c
         always @(o_dft_imag_data_exp or o_dft_real_data_exp or temp_imag_exp_out1 or temp_real_exp_out1 or gs_ctrl35)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp
            case (gs_ctrl35) 

               2'd1:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp = temp_real_exp_out1;
               end
               
               2'd2:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp = o_dft_imag_data_exp;
               end
               
               2'd3:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp = o_dft_real_data_exp;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_exp = temp_imag_exp_out1;
               end
               
            endcase

         end

         // resource: mux_23bx4i0c
         always @(o_dft_imag_data_man or o_dft_real_data_man or temp_imag_man_out1 or temp_real_man_out1 or gs_ctrl35)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man
            case (gs_ctrl35) 

               2'd1:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man = temp_real_man_out1;
               end
               
               2'd2:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man = o_dft_imag_data_man;
               end
               
               2'd3:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man = o_dft_real_data_man;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_25_a_man = temp_imag_man_out1;
               end
               
            endcase

         end

         // resource: mux_1bx2i0c
         always @(sreg_3[31] or sreg_4[31] or gs_ctrl38)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_sign
            if (gs_ctrl38) begin
               DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_sign = sreg_4[31];
            end
            else begin
               DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_sign = sreg_3[31];
            end
         end

         // resource: mux_8bx2i0c
         always @(sreg_3[30:23] or sreg_4[30:23] or gs_ctrl38)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_exp
            if (gs_ctrl38) begin
               DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_exp = sreg_4[30:23];
            end
            else begin
               DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_exp = sreg_3[30:23];
            end
         end

         // resource: mux_23bx2i0c
         always @(sreg_3[22:0] or sreg_4[22:0] or gs_ctrl38)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_man
            if (gs_ctrl38) begin
               DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_man = sreg_4[22:0];
            end
            else begin
               DFT_compute_cynw_cm_float_mul_E8_M23_1_25_b_man = sreg_3[22:0];
            end
         end

         // instance: drive_DFT_compute_Not_1U_1U_4_26_in1
         assign DFT_compute_Not_1U_1U_4_26_in1 = s_reg_94[31];

         // resource: DFT_compute_Not_1U_1U_4  instance: DFT_compute_Not_1U_1U_4_26
         assign DFT_compute_Not_1U_1U_4_26_out1 = !DFT_compute_Not_1U_1U_4_26_in1;

         // resource: mux_1bx2i0c
         always @(s_reg_95 or sreg_3[31] or gs_ctrl41)
          begin :drive_DFT_compute_Not_1U_1U_4_29_in1
            if (gs_ctrl41) begin
               DFT_compute_Not_1U_1U_4_29_in1 = sreg_3[31];
            end
            else begin
               DFT_compute_Not_1U_1U_4_29_in1 = s_reg_95;
            end
         end

         // resource: DFT_compute_Not_1U_1U_4  instance: DFT_compute_Not_1U_1U_4_29
         assign DFT_compute_Not_1U_1U_4_29_out1 = !DFT_compute_Not_1U_1U_4_29_in1;

         // resource: DFT_compute_Add_8Ux8U_8U_4  instance: DFT_compute_Add_8Ux8U_8U_4_37
         assign DFT_compute_Add_8Ux8U_8U_4_37_out1 = s_reg_84 + s_reg_75;

         // resource: DFT_compute_LessThanEQ_4Sx3S_1U_4  instance: DFT_compute_LessThanEQ_4Sx3S_1U_4_39
         assign DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 = {1'b0, s_reg_74} <= 4'd03;

         // resource: DFT_compute_Add_3Ux1U_4U_4  instance: DFT_compute_Add_3Ux1U_4U_4_40
         assign DFT_compute_Add_3Ux1U_4U_4_40_out1 = {1'b0, s_reg_72_slice} + 4'd01;

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_in1 or DFT_compute_int_to_cynw_cm_float_4_16_amtmp020 or DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3)
          begin :DFT_compute_int_to_cynw_cm_float_4_16_p12
            if ((|DFT_compute_int_to_cynw_cm_float_4_16_in1) && !({{ 23 {DFT_compute_int_to_cynw_cm_float_4_16_in1[8]}}, DFT_compute_int_to_cynw_cm_float_4_16_in1} == 32'd2147483648)) begin
               DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_man = DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3 + {22'b0000000000000000000000, DFT_compute_int_to_cynw_cm_float_4_16_amtmp020};
            end
            else begin
               DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_man = 23'd0000000;
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_in1 or DFT_compute_int_to_cynw_cm_float_4_16_amtmp020 or DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3 or DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3)
          begin :DFT_compute_int_to_cynw_cm_float_4_16_p11
            if ((|DFT_compute_int_to_cynw_cm_float_4_16_in1)) begin
               if ({{ 23 {DFT_compute_int_to_cynw_cm_float_4_16_in1[8]}}, DFT_compute_int_to_cynw_cm_float_4_16_in1} == 32'd2147483648) begin
                  DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_exp = 8'd158;
               end
               else begin
                  DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_exp = {{ 2 {DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[5]}}, DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3} + 8'd127 + {7'b0000000, DFT_compute_int_to_cynw_cm_float_4_16_amtmp020 & (&DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3)};
               end
            end
            else begin
               DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_exp = 8'd000;
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_cf_i5_sign = (|DFT_compute_int_to_cynw_cm_float_4_16_in1) & ({{ 23 {DFT_compute_int_to_cynw_cm_float_4_16_in1[8]}}, DFT_compute_int_to_cynw_cm_float_4_16_in1} == 32'd2147483648 | DFT_compute_int_to_cynw_cm_float_4_16_cizSign_i3);

         assign t_2 = {DFT_compute_int_to_cynw_cm_float_4_16_cil_i3[5], DFT_compute_int_to_cynw_cm_float_4_16_cil_i3} - 7'd002;

         assign t_3 = {DFT_compute_int_to_cynw_cm_float_4_16_cil_i3[5], DFT_compute_int_to_cynw_cm_float_4_16_cil_i3} - 7'd001;

         assign t_4 = DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3 >> {(|t_3[6]), DFT_compute_int_to_cynw_cm_float_4_16_cil_i3 - 6'd01};

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_amtmp020 = DFT_compute_int_to_cynw_cm_float_4_16_amtmp019 & t_4[0] & (DFT_compute_int_to_cynw_cm_float_4_16_amtmp019 & ((DFT_compute_int_to_cynw_cm_float_4_16_cil_i3[5] ^ DFT_compute_int_to_cynw_cm_float_4_16_cil_i3 > 6'd01) & (|(DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3 & ~(32'd4294967294 << {(|t_2[6]), DFT_compute_int_to_cynw_cm_float_4_16_cil_i3 - 6'd02})))) | DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3[0]);

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_cirzMan_i3 = u_4080;

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[31:16] or u_4081)
          begin :DFT_compute_int_to_cynw_cm_float_4_16_p4
            if ((|DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[31:16])) begin
               if ((|DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[31:25])) begin
                  if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[31]) begin
                     DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd31;
                  end
                  else begin
                     if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[30]) begin
                        DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd30;
                     end
                     else begin
                        if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[29]) begin
                           DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd29;
                        end
                        else begin
                           if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[28]) begin
                              DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd28;
                           end
                           else begin
                              if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[27]) begin
                                 DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd27;
                              end
                              else begin
                                 if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[26]) begin
                                    DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd26;
                                 end
                                 else begin
                                    DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd25;
                                 end
                              end
                           end
                        end
                     end
                  end
               end
               else begin
                  if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[24]) begin
                     DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd24;
                  end
                  else begin
                     if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[23]) begin
                        DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd23;
                     end
                     else begin
                        if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[22]) begin
                           DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd22;
                        end
                        else begin
                           if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[21]) begin
                              DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd21;
                           end
                           else begin
                              if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[20]) begin
                                 DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd20;
                              end
                              else begin
                                 if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[19]) begin
                                    DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd19;
                                 end
                                 else begin
                                    if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[18]) begin
                                       DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = 6'd18;
                                    end
                                    else begin
                                       DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = {5'd08, DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[17]};
                                    end
                                 end
                              end
                           end
                        end
                     end
                  end
               end
            end
            else begin
               DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 = {u_4081[4], u_4081};
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_cizSign_i3 = DFT_compute_int_to_cynw_cm_float_4_16_in1[8];

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3)
          begin :DFT_compute_int_to_cynw_cm_float_4_16_p5
            if (DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[5] ^ DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 > 6'd23) begin
               DFT_compute_int_to_cynw_cm_float_4_16_cil_i3 = DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 - 6'd23;
            end
            else begin
               DFT_compute_int_to_cynw_cm_float_4_16_cil_i3 = 6'd00;
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_in1 or DFT_compute_int_to_cynw_cm_float_4_16_cizSign_i3)
          begin :DFT_compute_int_to_cynw_cm_float_4_16_p3
            if (DFT_compute_int_to_cynw_cm_float_4_16_cizSign_i3) begin
               DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3 = -{{ 23 {DFT_compute_int_to_cynw_cm_float_4_16_in1[8]}}, DFT_compute_int_to_cynw_cm_float_4_16_in1};
            end
            else begin
               DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3 = {{ 23 {DFT_compute_int_to_cynw_cm_float_4_16_in1[8]}}, DFT_compute_int_to_cynw_cm_float_4_16_in1};
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_amtmp019 = DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[5] ^ DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3 > 6'd23;

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         assign DFT_compute_int_to_cynw_cm_float_4_16_cizManp1_i3 = (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3 & ~(32'd4294967294 << {(|DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[5]), DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[4:0]})) >> DFT_compute_int_to_cynw_cm_float_4_16_cil_i3;

         assign t_5 = 6'd23 - DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3;

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[4:0] or DFT_compute_int_to_cynw_cm_float_4_16_amtmp019 or DFT_compute_int_to_cynw_cm_float_4_16_cizManp1_i3[22:0] or t_5[5])
          begin :mux_4080
            if (DFT_compute_int_to_cynw_cm_float_4_16_amtmp019) begin
               u_4080 = DFT_compute_int_to_cynw_cm_float_4_16_cizManp1_i3[22:0];
            end
            else begin
               u_4080 = DFT_compute_int_to_cynw_cm_float_4_16_cizManp1_i3[22:0] << {(|t_5[5]), 5'd23 - DFT_compute_int_to_cynw_cm_float_4_16_ciu_i3[4:0]};
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[15:8] or u_4082)
          begin :mux_4081
            if ((|DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[15:8])) begin
               if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[15]) begin
                  u_4081 = 5'd15;
               end
               else begin
                  if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[14]) begin
                     u_4081 = 5'd14;
                  end
                  else begin
                     if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[13]) begin
                        u_4081 = 5'd13;
                     end
                     else begin
                        if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[12]) begin
                           u_4081 = 5'd12;
                        end
                        else begin
                           if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[11]) begin
                              u_4081 = 5'd11;
                           end
                           else begin
                              if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[10]) begin
                                 u_4081 = 5'd10;
                              end
                              else begin
                                 u_4081 = {4'd04, DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[9]};
                              end
                           end
                        end
                     end
                  end
               end
            end
            else begin
               u_4081 = {u_4082[3], u_4082};
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[7:4] or u_4083)
          begin :mux_4082
            if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[7]) begin
               u_4082 = 4'd07;
            end
            else begin
               if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[6]) begin
                  u_4082 = 4'd06;
               end
               else begin
                  if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[5]) begin
                     u_4082 = 4'd05;
                  end
                  else begin
                     if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[4]) begin
                        u_4082 = 4'd04;
                     end
                     else begin
                        u_4082 = {u_4083[2], u_4083};
                     end
                  end
               end
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[3:2] or u_4084)
          begin :mux_4083
            if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[3]) begin
               u_4083 = 3'd3;
            end
            else begin
               if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[2]) begin
                  u_4083 = 3'd2;
               end
               else begin
                  u_4083 = {u_4084[1], u_4084};
               end
            end
         end

         // resource: DFT_compute_int_to_cynw_cm_float_4  instance: DFT_compute_int_to_cynw_cm_float_4_16
         always @(DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[1:0])
          begin :mux_4084
            if (DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[1]) begin
               u_4084 = 2'd1;
            end
            else begin
               u_4084 = { 2 {~DFT_compute_int_to_cynw_cm_float_4_16_cizSig_i3[0]}};
            end
         end

         // resource: regr_en_5
         always @(posedge i_clk)
          begin :drive_sreg_1
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd08:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3] && 4'd00 != DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]) begin
                           sreg_1 <= DFT_compute_LeftShift_2Sx2U_5S_4_15_out1;
                        end
                     end
                     
                     6'd17:                      begin
                        if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 && 4'd00 != DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]) begin
                           sreg_1 <= DFT_compute_LeftShift_2Sx2U_5S_4_15_out1;
                        end
                     end
                     
                     6'd35:                      begin
                        if (5'd00 != o_dft_real_data_exp[4:0] && (!s_reg_83 && (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 && 4'd00 != DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]))) begin
                           sreg_1 <= DFT_compute_LeftShift_2Sx2U_5S_4_15_out1;
                        end
                     end
                     
                     6'd36:                      begin
                        if (5'd00 != s_reg_82[7:3] && (!DFT_compute_LessThan_8Ux8U_1U_4_20_out1 && (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 && 4'd00 != DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]))) begin
                           sreg_1 <= DFT_compute_LeftShift_2Sx2U_5S_4_15_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_sreg_2
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd26:                      begin
                        sreg_2 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x;
                     end
                     
                     6'd36:                      begin
                        case (s_reg_82[7:3]) 

                           5'd00:                            begin
                              sreg_2 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x;
                           end
                           
                           default:                            begin
                              if (DFT_compute_LessThan_8Ux8U_1U_4_20_out1) begin
                                 sreg_2 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x;
                              end
                           end
                           
                        endcase

                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_32bx2i0c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_sreg_3
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd27:                      begin
                        sreg_3 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_23_x[31:0];
                     end
                     
                     6'd31:                      begin
                        sreg_3 <= DFT_compute_cynw_cm_float_add2_E8_M23_1_21_x;
                     end
                     
                     6'd35:                      begin
                        if (5'd00 == o_dft_real_data_exp[4:0]) begin
                           sreg_3 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_23_x[31:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_sreg_4
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     6'd27:                      begin
                        sreg_4 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_22_x[31:0];
                     end
                     
                     6'd35:                      begin
                        if (5'd00 == o_dft_real_data_exp[4:0]) begin
                           sreg_4 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_22_x[31:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_sc_6
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 6'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_6bx10i9c
         always @(o_dft_real_data_exp[4:0] or s_reg_82[7:3] or s_reg_83 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_Add_3Ux1U_4U_4_14_out1[3] or DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1] or DFT_compute_LessThan_8Ux8U_1U_4_20_out1 or DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1 or DFT_compute_Add_3Ux1U_4U_4_40_out1[3] or global_state)
          begin :drive_global_state_next
            case (global_state) 

               6'd04:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                     global_state_next = global_state + 6'd01;
                  end
                  else begin
                     global_state_next = 6'd03;
                  end
               end
               
               6'd08:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_14_out1[3]) begin
                     case (DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]) 

                        4'd00:                         begin
                           global_state_next = global_state + 6'd01;
                        end
                        
                        default:                         begin
                           global_state_next = 6'd18;
                        end
                        
                     endcase

                  end
                  else begin
                     global_state_next = 6'd05;
                  end
               end
               
               6'd17:                begin
                  if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                     case (DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]) 

                        4'd00:                         begin
                           global_state_next = 6'd09;
                        end
                        
                        default:                         begin
                           global_state_next = global_state + 6'd01;
                        end
                        
                     endcase

                  end
                  else begin
                     global_state_next = 6'd37;
                  end
               end
               
               6'd35:                begin
                  case (o_dft_real_data_exp[4:0]) 

                     5'd00:                      begin
                        global_state_next = 6'd28;
                     end
                     
                     default:                      begin
                        if (s_reg_83) begin
                           global_state_next = global_state + 6'd01;
                        end
                        else begin
                           if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                              case (DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]) 

                                 4'd00:                                  begin
                                    global_state_next = 6'd09;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 6'd18;
                                 end
                                 
                              endcase

                           end
                           else begin
                              global_state_next = 6'd37;
                           end
                        end
                     end
                     
                  endcase

               end
               
               6'd36:                begin
                  case (s_reg_82[7:3]) 

                     5'd00:                      begin
                        global_state_next = 6'd27;
                     end
                     
                     default:                      begin
                        if (DFT_compute_LessThan_8Ux8U_1U_4_20_out1) begin
                           global_state_next = 6'd36;
                        end
                        else begin
                           if (DFT_compute_LessThanEQ_4Sx3S_1U_4_39_out1) begin
                              case (DFT_compute_LeftShift_2Sx2U_5S_4_15_out1[4:1]) 

                                 4'd00:                                  begin
                                    global_state_next = 6'd09;
                                 end
                                 
                                 default:                                  begin
                                    global_state_next = 6'd18;
                                 end
                                 
                              endcase

                           end
                           else begin
                              global_state_next = global_state + 6'd01;
                           end
                        end
                     end
                     
                  endcase

               end
               
               6'd39:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_40_out1[3]) begin
                     global_state_next = 6'd01;
                  end
                  else begin
                     global_state_next = 6'd37;
                  end
               end
               
               default:                begin
                  global_state_next = global_state + 6'd01;
               end
               
            endcase

         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd03, 6'd06, 6'd28, 6'd30, 6'd37:                         begin
                           gs_ctrl0 <= 3'd1;
                        end
                        
                        6'd05, 6'd07, 6'd29, 6'd32, 6'd33:                         begin
                           gs_ctrl0 <= 3'd2;
                        end
                        
                        6'd08:                         begin
                           gs_ctrl0 <= 3'd3;
                        end
                        
                        6'd39:                         begin
                           gs_ctrl0 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl1
            if (i_rst == 1'b0) begin
               gs_ctrl1 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd03:                         begin
                           gs_ctrl1 <= 3'd1;
                        end
                        
                        6'd06:                         begin
                           gs_ctrl1 <= 3'd2;
                        end
                        
                        6'd07:                         begin
                           gs_ctrl1 <= 3'd3;
                        end
                        
                        6'd30, 6'd33:                         begin
                           gs_ctrl1 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl1 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_ss_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl2
            if (i_rst == 1'b0) begin
               gs_ctrl2 <= 4'd01;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd01, 6'd03, 6'd28, 6'd29, 6'd30, 6'd32, 6'd33, 6'd37, 6'd39:                         begin
                           gs_ctrl2 <= 4'd01;
                        end
                        
                        6'd04:                         begin
                           gs_ctrl2 <= 4'd02;
                        end
                        
                        6'd05:                         begin
                           gs_ctrl2 <= 4'd03;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl2 <= 4'd04;
                        end
                        
                        6'd08:                         begin
                           gs_ctrl2 <= 4'd05;
                        end
                        
                        6'd17:                         begin
                           gs_ctrl2 <= 4'd06;
                        end
                        
                        6'd35:                         begin
                           gs_ctrl2 <= 4'd07;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl2 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl2 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl3
            if (i_rst == 1'b0) begin
               gs_ctrl3 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd01, 6'd03, 6'd30, 6'd33, 6'd37:                         begin
                           gs_ctrl3 <= 2'd1;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl3 <= 2'd2;
                        end
                        
                        6'd39:                         begin
                           gs_ctrl3 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl3 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx7i7c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl8
            if (i_rst == 1'b0) begin
               gs_ctrl8 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd05, 6'd07, 6'd31, 6'd33, 6'd34:                         begin
                           gs_ctrl8 <= 3'd1;
                        end
                        
                        6'd06, 6'd32, 6'd37:                         begin
                           gs_ctrl8 <= 3'd2;
                        end
                        
                        6'd08:                         begin
                           gs_ctrl8 <= 3'd3;
                        end
                        
                        6'd27:                         begin
                           gs_ctrl8 <= 3'd4;
                        end
                        
                        6'd35:                         begin
                           gs_ctrl8 <= 3'd5;
                        end
                        
                        6'd39:                         begin
                           gs_ctrl8 <= 3'd6;
                        end
                        
                        default:                         begin
                           gs_ctrl8 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl9
            if (i_rst == 1'b0) begin
               gs_ctrl9 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd06:                         begin
                           gs_ctrl9 <= 2'd1;
                        end
                        
                        6'd07:                         begin
                           gs_ctrl9 <= 2'd2;
                        end
                        
                        6'd32, 6'd34:                         begin
                           gs_ctrl9 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl9 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_ss_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl10
            if (i_rst == 1'b0) begin
               gs_ctrl10 <= 4'd01;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd01, 6'd27, 6'd31, 6'd32, 6'd33, 6'd34, 6'd37, 6'd39:                         begin
                           gs_ctrl10 <= 4'd01;
                        end
                        
                        6'd04:                         begin
                           gs_ctrl10 <= 4'd02;
                        end
                        
                        6'd05:                         begin
                           gs_ctrl10 <= 4'd03;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl10 <= 4'd04;
                        end
                        
                        6'd08:                         begin
                           gs_ctrl10 <= 4'd05;
                        end
                        
                        6'd17:                         begin
                           gs_ctrl10 <= 4'd06;
                        end
                        
                        6'd35:                         begin
                           gs_ctrl10 <= 4'd07;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl10 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl10 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl11
            if (i_rst == 1'b0) begin
               gs_ctrl11 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd01, 6'd32, 6'd34, 6'd37:                         begin
                           gs_ctrl11 <= 2'd1;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl11 <= 2'd2;
                        end
                        
                        6'd39:                         begin
                           gs_ctrl11 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl11 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_ss_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl18
            if (i_rst == 1'b0) begin
               gs_ctrl18 <= 4'd01;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd03, 6'd28, 6'd29, 6'd30, 6'd32, 6'd33, 6'd37, 6'd39:                         begin
                           gs_ctrl18 <= 4'd01;
                        end
                        
                        6'd04:                         begin
                           gs_ctrl18 <= 4'd02;
                        end
                        
                        6'd05:                         begin
                           gs_ctrl18 <= 4'd03;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl18 <= 4'd04;
                        end
                        
                        6'd08:                         begin
                           gs_ctrl18 <= 4'd05;
                        end
                        
                        6'd17:                         begin
                           gs_ctrl18 <= 4'd06;
                        end
                        
                        6'd35:                         begin
                           gs_ctrl18 <= 4'd07;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl18 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl18 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl19
            if (i_rst == 1'b0) begin
               gs_ctrl19 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd03, 6'd30, 6'd33, 6'd37:                         begin
                           gs_ctrl19 <= 2'd1;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl19 <= 2'd2;
                        end
                        
                        6'd39:                         begin
                           gs_ctrl19 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl19 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_ss_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl22
            if (i_rst == 1'b0) begin
               gs_ctrl22 <= 4'd01;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd27, 6'd31, 6'd32, 6'd33, 6'd34, 6'd37, 6'd39:                         begin
                           gs_ctrl22 <= 4'd01;
                        end
                        
                        6'd04:                         begin
                           gs_ctrl22 <= 4'd02;
                        end
                        
                        6'd05:                         begin
                           gs_ctrl22 <= 4'd03;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl22 <= 4'd04;
                        end
                        
                        6'd08:                         begin
                           gs_ctrl22 <= 4'd05;
                        end
                        
                        6'd17:                         begin
                           gs_ctrl22 <= 4'd06;
                        end
                        
                        6'd35:                         begin
                           gs_ctrl22 <= 4'd07;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl22 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl22 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl23
            if (i_rst == 1'b0) begin
               gs_ctrl23 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd00, 6'd32, 6'd34, 6'd37:                         begin
                           gs_ctrl23 <= 2'd1;
                        end
                        
                        6'd06, 6'd07:                         begin
                           gs_ctrl23 <= 2'd2;
                        end
                        
                        6'd39:                         begin
                           gs_ctrl23 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl23 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl24
            if (i_rst == 1'b0) begin
               gs_ctrl24 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd08:                         begin
                           gs_ctrl24 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl24 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl26
            if (i_rst == 1'b0) begin
               gs_ctrl26 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd17, 6'd35, 6'd36:                         begin
                           gs_ctrl26 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl26 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl27
            if (i_rst == 1'b0) begin
               gs_ctrl27 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd08:                         begin
                           gs_ctrl27 <= 3'd1;
                        end
                        
                        6'd17:                         begin
                           gs_ctrl27 <= 3'd2;
                        end
                        
                        6'd35:                         begin
                           gs_ctrl27 <= 3'd3;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl27 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl27 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl28
            if (i_rst == 1'b0) begin
               gs_ctrl28 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd36:                         begin
                           gs_ctrl28 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl28 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl29
            if (i_rst == 1'b0) begin
               gs_ctrl29 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd29:                         begin
                           gs_ctrl29 <= 3'd1;
                        end
                        
                        6'd30, 6'd33:                         begin
                           gs_ctrl29 <= 3'd2;
                        end
                        
                        6'd31:                         begin
                           gs_ctrl29 <= 3'd3;
                        end
                        
                        6'd32, 6'd34:                         begin
                           gs_ctrl29 <= 3'd4;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl29 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl29 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx7i7c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl32
            if (i_rst == 1'b0) begin
               gs_ctrl32 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd29:                         begin
                           gs_ctrl32 <= 3'd1;
                        end
                        
                        6'd30, 6'd32:                         begin
                           gs_ctrl32 <= 3'd2;
                        end
                        
                        6'd31:                         begin
                           gs_ctrl32 <= 3'd3;
                        end
                        
                        6'd33:                         begin
                           gs_ctrl32 <= 3'd4;
                        end
                        
                        6'd34:                         begin
                           gs_ctrl32 <= 3'd5;
                        end
                        
                        6'd36:                         begin
                           gs_ctrl32 <= 3'd6;
                        end
                        
                        default:                         begin
                           gs_ctrl32 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl35
            if (i_rst == 1'b0) begin
               gs_ctrl35 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd29:                         begin
                           gs_ctrl35 <= 2'd1;
                        end
                        
                        6'd30:                         begin
                           gs_ctrl35 <= 2'd2;
                        end
                        
                        6'd31:                         begin
                           gs_ctrl35 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl35 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl38
            if (i_rst == 1'b0) begin
               gs_ctrl38 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd29, 6'd30:                         begin
                           gs_ctrl38 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl38 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl41
            if (i_rst == 1'b0) begin
               gs_ctrl41 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        6'd32:                         begin
                           gs_ctrl41 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl41 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_real_busy
         assign i_real_busy = DFT_compute_gen_busy_r_1_2_out1[2];

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_out1 = {DFT_compute_gen_busy_r_1_2_gnew_req, {DFT_compute_gen_busy_r_1_2_gdiv, DFT_compute_gen_busy_r_1_2_gen_busy_i_real_m_data_is_invalid_next}};

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gen_busy_i_real_m_data_is_invalid_next = ~DFT_compute_gen_busy_r_1_2_gdiv;

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gdiv = i_real_vld & !DFT_compute_gen_busy_r_1_2_gnew_req;

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gnew_req = i_real_m_busy_req_0 & (i_real_m_unvalidated_req | i_real_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_real_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_real_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_real_m_unvalidated_req <= DFT_compute_N_Muxb_1_2_0_4_1_out1;
            end
         end

         // resource: DFT_compute_N_Muxb_1_2_0_4
         always @(i_real_vld or i_real_m_busy_req_0 or i_real_m_unvalidated_req)
          begin :DFT_compute_N_Muxb_1_2_0_4_1
            if (i_real_m_busy_req_0) begin
               DFT_compute_N_Muxb_1_2_0_4_1_out1 = i_real_m_unvalidated_req;
            end
            else begin
               DFT_compute_N_Muxb_1_2_0_4_1_out1 = i_real_vld;
            end
         end

         // instance: drive_o_dft_real_vld
         assign o_dft_real_vld = DFT_compute_Or_1Ux1U_1U_4_5_out1;

         // resource: DFT_compute_Or_1Ux1U_1U_4  instance: DFT_compute_Or_1Ux1U_1U_4_5
         assign DFT_compute_Or_1Ux1U_1U_4_5_out1 = o_dft_real_m_unacked_req | DFT_compute_Xor_1Ux1U_1U_1_4_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_m_unacked_req
            if (i_rst == 1'b0) begin
               o_dft_real_m_unacked_req <= 1'd0;
            end
            else begin
               o_dft_real_m_unacked_req <= DFT_compute_And_1Ux1U_1U_1_6_out1;
            end
         end

         // resource: DFT_compute_And_1Ux1U_1U_1  instance: DFT_compute_And_1Ux1U_1U_1_6
         assign DFT_compute_And_1Ux1U_1U_1_6_out1 = o_dft_real_busy & o_dft_real_vld;

         // resource: DFT_compute_Xor_1Ux1U_1U_1  instance: DFT_compute_Xor_1Ux1U_1U_1_4
         assign DFT_compute_Xor_1Ux1U_1U_1_4_out1 = o_dft_real_m_req_m_trig_req ^ o_dft_real_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_dft_real_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_dft_real_m_req_m_prev_trig_req <= o_dft_real_m_req_m_trig_req;
            end
         end

         // resource: DFT_compute_Not_1U_1U_1  instance: DFT_compute_Not_1U_1U_1_7
         assign DFT_compute_Not_1U_1U_1_7_out1 = !o_dft_real_m_req_m_trig_req;

         // instance: drive_o_dft_imag_vld
         assign o_dft_imag_vld = DFT_compute_Or_1Ux1U_1U_4_9_out1;

         // resource: DFT_compute_Or_1Ux1U_1U_4  instance: DFT_compute_Or_1Ux1U_1U_4_9
         assign DFT_compute_Or_1Ux1U_1U_4_9_out1 = o_dft_imag_m_unacked_req | DFT_compute_Xor_1Ux1U_1U_1_8_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_m_unacked_req
            if (i_rst == 1'b0) begin
               o_dft_imag_m_unacked_req <= 1'd0;
            end
            else begin
               o_dft_imag_m_unacked_req <= DFT_compute_And_1Ux1U_1U_1_10_out1;
            end
         end

         // resource: DFT_compute_And_1Ux1U_1U_1  instance: DFT_compute_And_1Ux1U_1U_1_10
         assign DFT_compute_And_1Ux1U_1U_1_10_out1 = o_dft_imag_busy & o_dft_imag_vld;

         // resource: DFT_compute_Xor_1Ux1U_1U_1  instance: DFT_compute_Xor_1Ux1U_1U_1_8
         assign DFT_compute_Xor_1Ux1U_1U_1_8_out1 = o_dft_imag_m_req_m_trig_req ^ o_dft_imag_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_dft_imag_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_dft_imag_m_req_m_prev_trig_req <= o_dft_imag_m_req_m_trig_req;
            end
         end

         // resource: DFT_compute_Not_1U_1U_1  instance: DFT_compute_Not_1U_1U_1_11
         assign DFT_compute_Not_1U_1U_1_11_out1 = !o_dft_imag_m_req_m_trig_req;

         // instance: drive_s_reg_75
         assign s_reg_75 = {{ 3 {sreg_1[4]}}, sreg_1};

         // instance: drive_s_reg_76
         assign s_reg_76 = {{1'b0, { 3 {sreg_1[4]}}}, sreg_1[4:1]};


endmodule

