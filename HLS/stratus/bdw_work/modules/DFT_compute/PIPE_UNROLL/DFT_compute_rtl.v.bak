// Generated by stratus_hls 19.12-s100  (91710.131054)
// Mon Apr 25 11:00:39 2022
// from ../DFT_compute.cpp

`timescale 1ps / 1ps

      
module DFT_compute(i_clk, i_rst, i_real_busy, i_real_vld, i_real_data_man, i_real_data_exp, i_real_data_sign, o_dft_real_busy, o_dft_real_vld, o_dft_real_data_man, o_dft_real_data_exp, o_dft_real_data_sign, o_dft_imag_busy, o_dft_imag_vld, o_dft_imag_data_man, o_dft_imag_data_exp, o_dft_imag_data_sign);

      input i_clk;
      input i_rst;
      input i_real_vld;
      input [22:0] i_real_data_man;
      input [7:0] i_real_data_exp;
      input i_real_data_sign;
      input o_dft_real_busy;
      input o_dft_imag_busy;
      output i_real_busy;
      output o_dft_real_vld;
      output [22:0] o_dft_real_data_man;
      reg [22:0] o_dft_real_data_man;
      output [7:0] o_dft_real_data_exp;
      reg [7:0] o_dft_real_data_exp;
      output o_dft_real_data_sign;
      reg o_dft_real_data_sign;
      output o_dft_imag_vld;
      output [22:0] o_dft_imag_data_man;
      reg [22:0] o_dft_imag_data_man;
      output [7:0] o_dft_imag_data_exp;
      reg [7:0] o_dft_imag_data_exp;
      output o_dft_imag_data_sign;
      reg o_dft_imag_data_sign;
      reg o_dft_imag_m_req_m_prev_trig_req;
      reg o_dft_imag_m_unacked_req;
      wire DFT_compute_Xor_1Ux1U_1U_1_8_out1;
      wire DFT_compute_Or_1Ux1U_1U_4_9_out1;
      reg o_dft_real_m_req_m_prev_trig_req;
      reg o_dft_real_m_unacked_req;
      wire DFT_compute_Xor_1Ux1U_1U_1_4_out1;
      wire DFT_compute_Or_1Ux1U_1U_4_5_out1;
      wire DFT_compute_And_1Ux1U_1U_4_138_out1;
      wire DFT_compute_And_1Ux1U_1U_4_136_out1;
      wire DFT_compute_Not_1U_1U_4_135_out1;
      wire DFT_compute_And_1Ux1U_1U_4_137_out1;
      reg DFT_compute_N_Muxb_1_2_3_4_1_out1;
      reg i_real_m_unvalidated_req;
      wire DFT_compute_gen_busy_r_1_2_gnew_req;
      wire DFT_compute_gen_busy_r_1_2_gnew_busy;
      wire DFT_compute_gen_busy_r_1_2_gdiv;
      wire DFT_compute_gen_busy_r_1_2_gen_busy_i_real_m_data_is_invalid_next;
      wire i_real_m_data_is_valid;
      reg[6:0] global_state_next;
      reg vld_1;
      wire rdy_0;
      reg vld_0;
      reg rdy_1;
      wire[2:0] DFT_compute_gen_busy_r_1_2_out1;
      reg gs_ctrl50;
      reg[1:0] gs_ctrl49;
      reg[2:0] DFT_compute_Add_3Ux2U_3U_4_36_in2;
      reg[1:0] gs_ctrl48;
      reg DFT_compute_Not_1U_1U_4_25_in1;
      reg gs_ctrl47;
      reg[2:0] gs_ctrl46;
      reg[30:0] sreg_3;
      reg[2:0] gs_ctrl45;
      wire DFT_compute_Not_1U_1U_4_25_out1;
      reg[2:0] gs_ctrl44;
      reg[2:0] gs_ctrl41;
      wire DFT_compute_Not_1U_1U_4_22_out1;
      reg DFT_compute_Not_1U_1U_4_22_in1;
      reg gs_ctrl40;
      reg[30:0] sreg_1;
      reg[31:0] sreg_2;
      reg[31:0] sreg_4;
      reg[3:0] gs_ctrl37;
      reg[1:0] gs_ctrl34;
      reg[2:0] DFT_compute_Add_3Ux1U_3U_4_19_in2;
      reg gs_ctrl30;
      reg gs_ctrl27;
      reg[2:0] DFT_compute_LessThan_3Ux4U_1U_4_16_in1_slice;
      reg[2:0] DFT_compute_LessThan_3Ux4U_1U_4_16_in2;
      reg gs_ctrl25;
      reg[22:0] i_real_m_stall_reg_man;
      reg[7:0] i_real_m_stall_reg_exp;
      reg i_real_m_stall_reg_sign;
      reg i_real_m_stall_reg_full;
      reg[1:0] gs_ctrl24;
      reg[2:0] gs_ctrl23;
      reg[1:0] gs_ctrl20;
      reg[2:0] gs_ctrl19;
      reg DFT_compute_N_Muxb_1_2_3_4_13_out1;
      reg[1:0] gs_ctrl12;
      reg[2:0] gs_ctrl11;
      reg[1:0] gs_ctrl10;
      reg[3:0] gs_ctrl9;
      reg[7:0] DFT_compute_N_Mux_8_2_1_4_14_out1;
      reg[1:0] gs_ctrl4;
      reg[2:0] gs_ctrl3;
      reg[22:0] DFT_compute_N_Mux_23_2_2_4_15_out1;
      reg[2:0] gs_ctrl2;
      reg[3:0] gs_ctrl1;
      reg[22:0] s_reg_364;
      reg[7:0] s_reg_363;
      reg s_reg_362;
      reg[22:0] s_reg_361;
      reg[7:0] s_reg_360;
      reg s_reg_359;
      reg[22:0] s_reg_358;
      reg[7:0] s_reg_357;
      reg s_reg_356;
      reg[22:0] s_reg_355;
      reg[7:0] s_reg_354;
      reg s_reg_353;
      reg[22:0] s_reg_352;
      reg[7:0] s_reg_351;
      reg s_reg_350;
      reg[7:0] s_reg_348;
      reg[31:0] s_reg_347;
      reg s_reg_344;
      reg[31:0] s_reg_340;
      wire DFT_compute_LessThan_3Ux4U_1U_4_16_out1;
      wire[2:0] DFT_compute_Add_3Ux2U_3U_4_36_out1;
      wire[2:0] DFT_compute_Add_3Ux1U_3U_4_19_out1;
      reg[2:0] s_reg_336_slice;
      wire[3:0] DFT_compute_Add_3Ux2U_4U_4_34_out1;
      wire[3:0] DFT_compute_Add_3Ux1U_4U_4_12_out1;
      reg cycle2_state;
      reg s_reg_349;
      reg en_2;
      reg[2:0] s_reg_335_slice;
      wire DFT_compute_And_1Ux1U_1U_1_6_out1;
      wire DFT_compute_And_1Ux1U_1U_1_10_out1;
      wire DFT_compute_Not_1U_1U_1_11_out1;
      reg o_dft_imag_m_req_m_trig_req;
      wire DFT_compute_Not_1U_1U_1_7_out1;
      reg o_dft_real_m_req_m_trig_req;
      reg i_real_m_stalling;
      reg gs_ctrl0;
      reg s_reg_337;
      reg drain;
      reg en_0;
      reg cycle1_state;
      reg en_1;
      reg i_real_m_busy_req_0;
      wire[3:0] DFT_compute_Add_3Ux3U_4U_4_51_out1;
      reg[6:0] global_state;
      reg stall0;
      reg DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign;
      reg[7:0] DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp;
      reg[22:0] DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man;
      reg DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign;
      reg[7:0] DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp;
      reg[22:0] DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man;
      wire[31:0] DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x;
      wire[36:0] DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x;
      wire[7:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_exp;
      reg DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept;
      wire[31:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x;
      wire DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_sign;
      wire[22:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_man;
      wire DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_sign;
      wire[7:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_exp;
      wire[22:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_man;
      reg DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_accept;
      wire[31:0] DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x;
      reg DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign;
      reg[7:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp;
      reg[22:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man;
      reg DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign;
      reg[7:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp;
      reg[22:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man;
      wire[31:0] DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x;
      reg DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_sign;
      reg[7:0] DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_exp;
      reg[22:0] DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_man;
      wire[36:0] DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x;
      reg[7:0] temp_imag_exp_DIN;
      reg temp_imag_exp_CE;
      reg temp_imag_exp_RW;
      reg[2:0] temp_imag_exp_in1;
      wire[7:0] temp_imag_exp_out1;
      reg[22:0] temp_imag_man_DIN;
      reg temp_imag_man_CE;
      reg temp_imag_man_RW;
      reg[2:0] temp_imag_man_in1;
      wire[22:0] temp_imag_man_out1;
      reg temp_imag_sign_DIN;
      reg temp_imag_sign_CE;
      reg temp_imag_sign_RW;
      reg[2:0] temp_imag_sign_in1;
      wire temp_imag_sign_out1;
      reg[7:0] temp_real_exp_DIN;
      reg temp_real_exp_CE;
      reg temp_real_exp_RW;
      reg[2:0] temp_real_exp_in1;
      wire[7:0] temp_real_exp_out1;
      reg[22:0] temp_real_man_DIN;
      reg temp_real_man_CE;
      reg temp_real_man_RW;
      reg[2:0] temp_real_man_in1;
      wire[22:0] temp_real_man_out1;
      reg temp_real_sign_DIN;
      reg temp_real_sign_CE;
      reg temp_real_sign_RW;
      reg[2:0] temp_real_sign_in1;
      wire temp_real_sign_out1;

         DFT_compute_RAM_8X1_1 temp_real_sign(
                                 .DIN( temp_real_sign_DIN ),
                                 .CE( temp_real_sign_CE ),
                                 .RW( temp_real_sign_RW ),
                                 .in1( temp_real_sign_in1 ),
                                 .out1( temp_real_sign_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_RAM_8X23_3 temp_real_man(
                                  .DIN( temp_real_man_DIN ),
                                  .CE( temp_real_man_CE ),
                                  .RW( temp_real_man_RW ),
                                  .in1( temp_real_man_in1 ),
                                  .out1( temp_real_man_out1 ),
                                  .clk( i_clk )
                                );

         DFT_compute_RAM_8X8_2 temp_real_exp(
                                 .DIN( temp_real_exp_DIN ),
                                 .CE( temp_real_exp_CE ),
                                 .RW( temp_real_exp_RW ),
                                 .in1( temp_real_exp_in1 ),
                                 .out1( temp_real_exp_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_RAM_8X1_1 temp_imag_sign(
                                 .DIN( temp_imag_sign_DIN ),
                                 .CE( temp_imag_sign_CE ),
                                 .RW( temp_imag_sign_RW ),
                                 .in1( temp_imag_sign_in1 ),
                                 .out1( temp_imag_sign_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_RAM_8X23_3 temp_imag_man(
                                  .DIN( temp_imag_man_DIN ),
                                  .CE( temp_imag_man_CE ),
                                  .RW( temp_imag_man_RW ),
                                  .in1( temp_imag_man_in1 ),
                                  .out1( temp_imag_man_out1 ),
                                  .clk( i_clk )
                                );

         DFT_compute_RAM_8X8_2 temp_imag_exp(
                                 .DIN( temp_imag_exp_DIN ),
                                 .CE( temp_imag_exp_CE ),
                                 .RW( temp_imag_exp_RW ),
                                 .in1( temp_imag_exp_in1 ),
                                 .out1( temp_imag_exp_out1 ),
                                 .clk( i_clk )
                               );

         DFT_compute_cynw_cm_float_sin_E8_M23_0 DFT_compute_cynw_cm_float_sin_E8_M23_0_54(
                                                  .a_sign( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_sign ),
                                                  .a_exp( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_exp ),
                                                  .a_man( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_man ),
                                                  .x( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x )
                                                );

         DFT_compute_cynw_cm_float_mul_E8_M23_1 DFT_compute_cynw_cm_float_mul_E8_M23_1_21(
                                                  .a_sign( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign ),
                                                  .a_exp( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp ),
                                                  .a_man( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man ),
                                                  .b_sign( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign ),
                                                  .b_exp( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp ),
                                                  .b_man( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man ),
                                                  .x( DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x )
                                                );

         DFT_compute_cynw_cm_float_div_ieee_E8_M23_0 DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62(
                                                       .clk( i_clk ),
                                                       .a_sign( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_sign ),
                                                       .a_exp( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_exp ),
                                                       .a_man( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_man ),
                                                       .b_sign( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_sign ),
                                                       .b_exp( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_exp ),
                                                       .b_man( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_man ),
                                                       .accept( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_accept ),
                                                       .x( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x )
                                                     );

         DFT_compute_cynw_cm_float_div_ieee_E8_M23_0 DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52(
                                                       .clk( i_clk ),
                                                       .a_sign( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_sign ),
                                                       .a_exp( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_exp ),
                                                       .a_man( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_man ),
                                                       .b_sign( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_sign ),
                                                       .b_exp( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_exp ),
                                                       .b_man( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_man ),
                                                       .accept( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept ),
                                                       .x( DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x )
                                                     );

         DFT_compute_cynw_cm_float_cos_E8_M23_0 DFT_compute_cynw_cm_float_cos_E8_M23_0_55(
                                                  .a_sign( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_sign ),
                                                  .a_exp( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_exp ),
                                                  .a_man( DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_man ),
                                                  .x( DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x )
                                                );

         DFT_compute_cynw_cm_float_add2_E8_M23_0 DFT_compute_cynw_cm_float_add2_E8_M23_0_24(
                                                   .a_sign( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign ),
                                                   .a_exp( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp ),
                                                   .a_man( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man ),
                                                   .b_sign( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign ),
                                                   .b_exp( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp ),
                                                   .b_man( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man ),
                                                   .x( DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x )
                                                 );

         // resource: mux_1bx2i0c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_data_sign
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd004, 7'd008, 7'd016, 7'd033, 7'd041, 7'd048, 7'd056, 7'd063, 7'd071, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                      begin
                        o_dft_imag_data_sign <= temp_imag_sign_out1;
                     end
                     
                     7'd039:                      begin
                        o_dft_imag_data_sign <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx2i0c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_o_dft_imag_data_exp
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd004, 7'd008, 7'd016, 7'd033, 7'd041, 7'd048, 7'd056, 7'd063, 7'd071, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                      begin
                        o_dft_imag_data_exp <= temp_imag_exp_out1;
                     end
                     
                     7'd039:                      begin
                        o_dft_imag_data_exp <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_23bx2i0c
         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_o_dft_imag_data_man
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd004, 7'd008, 7'd016, 7'd033, 7'd041, 7'd048, 7'd056, 7'd063, 7'd071, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                      begin
                        o_dft_imag_data_man <= temp_imag_man_out1;
                     end
                     
                     7'd039:                      begin
                        o_dft_imag_data_man <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i0c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_data_sign
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd004, 7'd009, 7'd018, 7'd034, 7'd049, 7'd055, 7'd064, 7'd070, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                      begin
                        o_dft_real_data_sign <= temp_real_sign_out1;
                     end
                     
                     7'd039:                      begin
                        o_dft_real_data_sign <= DFT_compute_Add_3Ux3U_4U_4_51_out1[3];
                     end
                     
                     7'd040:                      begin
                        if (o_dft_real_data_sign) begin
                           o_dft_real_data_sign <= temp_real_sign_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_o_dft_real_data_exp
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd004, 7'd009, 7'd018, 7'd034, 7'd049, 7'd055, 7'd064, 7'd070, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                      begin
                        o_dft_real_data_exp <= temp_real_exp_out1;
                     end
                     
                     7'd040:                      begin
                        if (o_dft_real_data_sign) begin
                           o_dft_real_data_exp <= temp_real_exp_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_o_dft_real_data_man
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd004, 7'd009, 7'd018, 7'd034, 7'd049, 7'd055, 7'd064, 7'd070, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                      begin
                        o_dft_real_data_man <= temp_real_man_out1;
                     end
                     
                     7'd040:                      begin
                        if (o_dft_real_data_sign) begin
                           o_dft_real_data_man <= temp_real_man_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_real_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_real_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        7'd003:                         begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 if (en_0) begin
                                    if (drain) begin
                                    end
                                    else begin
                                       i_real_m_busy_req_0 <= 1'd0;
                                    end
                                 end
                              end
                              else begin
                                 if (en_0) begin
                                    if (s_reg_337) begin
                                       i_real_m_busy_req_0 <= 1'd1;
                                    end
                                    else begin
                                       i_real_m_busy_req_0 <= 1'd0;
                                    end
                                 end
                                 else begin
                                    i_real_m_busy_req_0 <= 1'd1;
                                 end
                              end
                           end
                           else begin
                              if (en_0) begin
                                 if (drain) begin
                                 end
                                 else begin
                                    i_real_m_busy_req_0 <= 1'd0;
                                 end
                              end
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or en_1 or gs_ctrl0)
          begin :drive_i_real_m_stalling
            if (stall0) begin
               i_real_m_stalling = 1'd1;
            end
            else begin
               if (gs_ctrl0) begin
                  if (en_1) begin
                     i_real_m_stalling = 1'd0;
                  end
                  else begin
                     i_real_m_stalling = 1'd1;
                  end
               end
               else begin
                  i_real_m_stalling = 1'd0;
               end
            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_dft_real_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        7'd071, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092:                         begin
                           o_dft_real_m_req_m_trig_req <= DFT_compute_Not_1U_1U_1_7_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_dft_imag_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        7'd072, 7'd075, 7'd078, 7'd081, 7'd084, 7'd087, 7'd090, 7'd093:                         begin
                           o_dft_imag_m_req_m_trig_req <= DFT_compute_Not_1U_1U_1_11_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(DFT_compute_And_1Ux1U_1U_1_6_out1 or DFT_compute_And_1Ux1U_1U_1_10_out1 or global_state)
          begin :drive_stall0
            case (global_state) 

               7'd072, 7'd075, 7'd078, 7'd081, 7'd084, 7'd087, 7'd090, 7'd093:                begin
                  stall0 = DFT_compute_And_1Ux1U_1U_1_6_out1;
               end
               
               7'd073, 7'd076, 7'd079, 7'd082, 7'd085, 7'd088, 7'd091, 7'd094:                begin
                  stall0 = DFT_compute_And_1Ux1U_1U_1_10_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_drain
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd002:                      begin
                        drain <= 1'd0;
                     end
                     
                     7'd003:                      begin
                        if (en_1) begin
                           if (cycle1_state) begin
                           end
                           else begin
                              drain <= s_reg_337;
                           end
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_3bx5i2c
         // resource: regr_en_3
         always @(posedge i_clk)
          begin :drive_s_reg_335_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd002:                      begin
                        s_reg_335_slice <= 3'd0;
                     end
                     
                     7'd003:                      begin
                        if (en_2) begin
                           if (!cycle2_state && s_reg_349) begin
                              if (en_0) begin
                                 if (drain) begin
                                    s_reg_335_slice <= 3'd0;
                                 end
                                 else begin
                                    s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                 end
                              end
                              else begin
                                 s_reg_335_slice <= 3'd0;
                              end
                           end
                           else begin
                              if (en_0) begin
                                 if (en_1) begin
                                    if (cycle1_state) begin
                                       if (drain) begin
                                       end
                                       else begin
                                          s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                       end
                                    end
                                    else begin
                                       if (s_reg_337) begin
                                       end
                                       else begin
                                          s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                       end
                                    end
                                 end
                                 else begin
                                    if (drain) begin
                                    end
                                    else begin
                                       s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                    end
                                 end
                              end
                           end
                        end
                        else begin
                           if (en_0) begin
                              if (en_1) begin
                                 if (cycle1_state) begin
                                    if (drain) begin
                                    end
                                    else begin
                                       s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                    end
                                 end
                                 else begin
                                    if (s_reg_337) begin
                                    end
                                    else begin
                                       s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                    end
                                 end
                              end
                              else begin
                                 if (drain) begin
                                 end
                                 else begin
                                    s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                                 end
                              end
                           end
                        end
                     end
                     
                     7'd007:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           s_reg_335_slice <= 3'd0;
                        end
                        else begin
                           s_reg_335_slice <= DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                        end
                     end
                     
                     7'd015:                      begin
                        if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                           s_reg_335_slice <= 3'd0;
                        end
                        else begin
                           s_reg_335_slice <= DFT_compute_Add_3Ux2U_4U_4_34_out1[2:0];
                        end
                     end
                     
                     7'd024, 7'd039:                      begin
                        s_reg_335_slice <= DFT_compute_Add_3Ux3U_4U_4_51_out1[2:0];
                     end
                     
                     7'd032:                      begin
                        s_reg_335_slice <= 3'd1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_3bx5i1c
         // resource: regr_en_3
         always @(posedge i_clk)
          begin :drive_s_reg_336_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd003:                      begin
                        if (en_2) begin
                           if (!cycle2_state && s_reg_349) begin
                              if (en_0) begin
                                 if (drain) begin
                                    s_reg_336_slice <= 3'd0;
                                 end
                                 else begin
                                    s_reg_336_slice <= s_reg_335_slice;
                                 end
                              end
                              else begin
                                 s_reg_336_slice <= 3'd0;
                              end
                           end
                           else begin
                              if (en_0) begin
                                 if (en_1) begin
                                    if (cycle1_state) begin
                                       if (drain) begin
                                       end
                                       else begin
                                          s_reg_336_slice <= s_reg_335_slice;
                                       end
                                    end
                                    else begin
                                       if (s_reg_337) begin
                                       end
                                       else begin
                                          s_reg_336_slice <= s_reg_335_slice;
                                       end
                                    end
                                 end
                                 else begin
                                    if (drain) begin
                                    end
                                    else begin
                                       s_reg_336_slice <= s_reg_335_slice;
                                    end
                                 end
                              end
                           end
                        end
                        else begin
                           if (en_0) begin
                              if (en_1) begin
                                 if (cycle1_state) begin
                                    if (drain) begin
                                    end
                                    else begin
                                       s_reg_336_slice <= s_reg_335_slice;
                                    end
                                 end
                                 else begin
                                    if (s_reg_337) begin
                                    end
                                    else begin
                                       s_reg_336_slice <= s_reg_335_slice;
                                    end
                                 end
                              end
                              else begin
                                 if (drain) begin
                                 end
                                 else begin
                                    s_reg_336_slice <= s_reg_335_slice;
                                 end
                              end
                           end
                        end
                     end
                     
                     7'd007:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           s_reg_336_slice <= DFT_compute_Add_3Ux1U_3U_4_19_out1;
                        end
                        else begin
                           s_reg_336_slice <= {{DFT_compute_Add_3Ux1U_4U_4_12_out1[0], DFT_compute_Add_3Ux1U_4U_4_12_out1[1]}, DFT_compute_Add_3Ux1U_4U_4_12_out1[2]};
                        end
                     end
                     
                     7'd015:                      begin
                        if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                           s_reg_336_slice <= DFT_compute_Add_3Ux2U_3U_4_36_out1;
                        end
                        else begin
                           s_reg_336_slice <= DFT_compute_Add_3Ux1U_3U_4_19_out1;
                        end
                     end
                     
                     7'd024, 7'd032, 7'd040:                      begin
                        s_reg_336_slice <= DFT_compute_Add_3Ux2U_3U_4_36_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx3i0c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_337
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd003:                      begin
                        if (en_2) begin
                           if (!cycle2_state && s_reg_349) begin
                              if (en_0) begin
                                 if (drain) begin
                                    s_reg_337 <= DFT_compute_LessThan_3Ux4U_1U_4_16_out1;
                                 end
                                 else begin
                                    s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                 end
                              end
                              else begin
                                 s_reg_337 <= DFT_compute_LessThan_3Ux4U_1U_4_16_out1;
                              end
                           end
                           else begin
                              if (en_0) begin
                                 if (en_1) begin
                                    if (cycle1_state) begin
                                       if (drain) begin
                                       end
                                       else begin
                                          s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                       end
                                    end
                                    else begin
                                       if (s_reg_337) begin
                                       end
                                       else begin
                                          s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                       end
                                    end
                                 end
                                 else begin
                                    if (drain) begin
                                    end
                                    else begin
                                       s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                    end
                                 end
                              end
                           end
                        end
                        else begin
                           if (en_0) begin
                              if (en_1) begin
                                 if (cycle1_state) begin
                                    if (drain) begin
                                    end
                                    else begin
                                       s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                    end
                                 end
                                 else begin
                                    if (s_reg_337) begin
                                    end
                                    else begin
                                       s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                    end
                                 end
                              end
                              else begin
                                 if (drain) begin
                                 end
                                 else begin
                                    s_reg_337 <= DFT_compute_Add_3Ux1U_4U_4_12_out1[3];
                                 end
                              end
                           end
                        end
                     end
                     
                     7'd007:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           s_reg_337 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[31];
                        end
                        else begin
                           s_reg_337 <= DFT_compute_LessThan_3Ux4U_1U_4_16_out1;
                        end
                     end
                     
                     7'd015, 7'd024, 7'd025:                      begin
                        s_reg_337 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_32bx2i0c
         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_340
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd008, 7'd016, 7'd033, 7'd048, 7'd055, 7'd063:                      begin
                        s_reg_340 <= DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x;
                     end
                     
                     7'd011, 7'd019, 7'd025, 7'd026, 7'd031, 7'd034, 7'd043, 7'd051, 7'd058, 7'd066:                      begin
                        s_reg_340 <= {9'b000000000, DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[22:0]};
                     end
                     
                     7'd024:                      begin
                        if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                           /* state36 */
                           s_reg_340 <= {9'b000000000, DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[22:0]};
                        end
                     end
                     
                     7'd040:                      begin
                        if (o_dft_real_data_sign) begin
                           s_reg_340 <= DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_344
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd009, 7'd018, 7'd025, 7'd026, 7'd031, 7'd036, 7'd043, 7'd051, 7'd058, 7'd066:                      begin
                        s_reg_344 <= DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31];
                     end
                     
                     7'd024:                      begin
                        if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                           s_reg_344 <= DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_s_reg_347
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd010, 7'd017, 7'd035, 7'd041, 7'd050, 7'd056, 7'd065:                      begin
                        s_reg_347 <= DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_348
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd011, 7'd019, 7'd025, 7'd026, 7'd031, 7'd034, 7'd043, 7'd051, 7'd058, 7'd066:                      begin
                        s_reg_348 <= DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:23];
                     end
                     
                     7'd024:                      begin
                        if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                           s_reg_348 <= DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:23];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx3i0c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_349
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd003:                      begin
                        if (en_1) begin
                           if (cycle1_state) begin
                           end
                           else begin
                              s_reg_349 <= s_reg_337;
                           end
                        end
                     end
                     
                     7'd011, 7'd019, 7'd034, 7'd042, 7'd049, 7'd057, 7'd064:                      begin
                        s_reg_349 <= DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31];
                     end
                     
                     7'd024:                      begin
                        if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                           s_reg_349 <= DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[31];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_350
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd026:                      begin
                        s_reg_350 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_351
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd026:                      begin
                        s_reg_351 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_352
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd026:                      begin
                        s_reg_352 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_353
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd026:                      begin
                        s_reg_353 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_354
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd026:                      begin
                        s_reg_354 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_355
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd026:                      begin
                        s_reg_355 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_356
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd027:                      begin
                        s_reg_356 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_357
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd027:                      begin
                        s_reg_357 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_358
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd027:                      begin
                        s_reg_358 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_359
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd027:                      begin
                        s_reg_359 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_360
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd027:                      begin
                        s_reg_360 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_361
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd027:                      begin
                        s_reg_361 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_s_reg_362
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd032:                      begin
                        s_reg_362 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[31];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_363
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd032:                      begin
                        s_reg_363 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:23];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_s_reg_364
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd032:                      begin
                        s_reg_364 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[22:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_3bx11i8c
         always @(s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or cycle2_state or gs_ctrl1 or s_reg_336_slice or s_reg_335_slice)
          begin :drive_temp_real_man_in1
            case (gs_ctrl1) 

               4'd01:                begin
                  if (!cycle2_state && s_reg_349) begin
                     if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                        temp_real_man_in1 = 3'd0;
                     end
                     else begin
                        temp_real_man_in1 = s_reg_336_slice;
                     end
                  end
                  else begin
                     temp_real_man_in1 = s_reg_336_slice;
                  end
               end
               
               4'd02:                begin
                  temp_real_man_in1 = s_reg_336_slice;
               end
               
               4'd03:                begin
                  temp_real_man_in1 = s_reg_335_slice;
               end
               
               4'd04:                begin
                  temp_real_man_in1 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
               end
               
               4'd05:                begin
                  temp_real_man_in1 = 3'd4;
               end
               
               4'd06:                begin
                  temp_real_man_in1 = 3'd5;
               end
               
               4'd07:                begin
                  temp_real_man_in1 = 3'd1;
               end
               
               4'd08:                begin
                  temp_real_man_in1 = 3'd6;
               end
               
               4'd09:                begin
                  temp_real_man_in1 = 3'd2;
               end
               
               4'd10:                begin
                  temp_real_man_in1 = 3'd7;
               end
               
               4'd11:                begin
                  temp_real_man_in1 = 3'd3;
               end
               
               default:                begin
                  /* state4 */
                  temp_real_man_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_23bx5i1c
         always @(o_dft_real_data_man or DFT_compute_N_Mux_23_2_2_4_15_out1 or temp_real_man_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[22:0] or gs_ctrl2)
          begin :drive_temp_real_man_DIN
            case (gs_ctrl2) 

               3'd1:                begin
                  temp_real_man_DIN = DFT_compute_N_Mux_23_2_2_4_15_out1;
               end
               
               3'd2:                begin
                  temp_real_man_DIN = temp_real_man_out1;
               end
               
               3'd3:                begin
                  temp_real_man_DIN = o_dft_real_data_man;
               end
               
               3'd4:                begin
                  temp_real_man_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[22:0];
               end
               
               default:                begin
                  temp_real_man_DIN = 23'd0000000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(stall0 or s_reg_337 or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or en_1 or en_2 or cycle1_state or cycle2_state or gs_ctrl3)
          begin :drive_temp_real_man_CE
            if (stall0) begin
               temp_real_man_CE = 1'b0;
            end
            else begin
               case (gs_ctrl3) 

                  3'd1:                   begin
                     temp_real_man_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && s_reg_349) begin
                           if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                              temp_real_man_CE = 1'b1;
                           end
                           else begin
                              temp_real_man_CE = 1'b0;
                           end
                        end
                        else begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 temp_real_man_CE = 1'b0;
                              end
                              else begin
                                 temp_real_man_CE = 1'b1;
                              end
                           end
                           else begin
                              temp_real_man_CE = 1'b0;
                           end
                        end
                     end
                     else begin
                        if (en_1) begin
                           if (cycle1_state) begin
                              temp_real_man_CE = 1'b0;
                           end
                           else begin
                              temp_real_man_CE = 1'b1;
                           end
                        end
                        else begin
                           temp_real_man_CE = 1'b0;
                        end
                     end
                  end
                  
                  3'd3:                   begin
                     if (s_reg_337) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  3'd4:                   begin
                     if (s_reg_337) begin
                        temp_real_man_CE = s_reg_337;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  3'd5:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                        temp_real_man_CE = 1'b1;
                     end
                     else begin
                        temp_real_man_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_man_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_337 or s_reg_349 or en_1 or en_2 or cycle1_state or cycle2_state or gs_ctrl4)
          begin :drive_temp_real_man_RW
            if (stall0) begin
               temp_real_man_RW = 1'b0;
            end
            else begin
               case (gs_ctrl4) 

                  2'd1:                   begin
                     temp_real_man_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && s_reg_349) begin
                           temp_real_man_RW = 1'b0;
                        end
                        else begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 temp_real_man_RW = 1'b0;
                              end
                              else begin
                                 temp_real_man_RW = 1'b1;
                              end
                           end
                           else begin
                              temp_real_man_RW = 1'b0;
                           end
                        end
                     end
                     else begin
                        if (en_1) begin
                           if (cycle1_state) begin
                              temp_real_man_RW = 1'b0;
                           end
                           else begin
                              temp_real_man_RW = 1'b1;
                           end
                        end
                        else begin
                           temp_real_man_RW = 1'b0;
                        end
                     end
                  end
                  
                  2'd3:                   begin
                     if (s_reg_337) begin
                        temp_real_man_RW = 1'b1;
                     end
                     else begin
                        temp_real_man_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_man_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx11i8c
         always @(s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or cycle2_state or gs_ctrl1 or s_reg_336_slice or s_reg_335_slice)
          begin :drive_temp_real_exp_in1
            case (gs_ctrl1) 

               4'd01:                begin
                  if (!cycle2_state && s_reg_349) begin
                     if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                        temp_real_exp_in1 = 3'd0;
                     end
                     else begin
                        temp_real_exp_in1 = s_reg_336_slice;
                     end
                  end
                  else begin
                     temp_real_exp_in1 = s_reg_336_slice;
                  end
               end
               
               4'd02:                begin
                  temp_real_exp_in1 = s_reg_336_slice;
               end
               
               4'd03:                begin
                  temp_real_exp_in1 = s_reg_335_slice;
               end
               
               4'd04:                begin
                  temp_real_exp_in1 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
               end
               
               4'd05:                begin
                  temp_real_exp_in1 = 3'd4;
               end
               
               4'd06:                begin
                  temp_real_exp_in1 = 3'd5;
               end
               
               4'd07:                begin
                  temp_real_exp_in1 = 3'd1;
               end
               
               4'd08:                begin
                  temp_real_exp_in1 = 3'd6;
               end
               
               4'd09:                begin
                  temp_real_exp_in1 = 3'd2;
               end
               
               4'd10:                begin
                  temp_real_exp_in1 = 3'd7;
               end
               
               4'd11:                begin
                  temp_real_exp_in1 = 3'd3;
               end
               
               default:                begin
                  temp_real_exp_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_8bx5i1c
         always @(o_dft_real_data_exp or DFT_compute_N_Mux_8_2_1_4_14_out1 or temp_real_exp_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:23] or gs_ctrl2)
          begin :drive_temp_real_exp_DIN
            case (gs_ctrl2) 

               3'd1:                begin
                  temp_real_exp_DIN = DFT_compute_N_Mux_8_2_1_4_14_out1;
               end
               
               3'd2:                begin
                  temp_real_exp_DIN = temp_real_exp_out1;
               end
               
               3'd3:                begin
                  temp_real_exp_DIN = o_dft_real_data_exp;
               end
               
               3'd4:                begin
                  temp_real_exp_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:23];
               end
               
               default:                begin
                  temp_real_exp_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(stall0 or s_reg_337 or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or en_1 or en_2 or cycle1_state or cycle2_state or gs_ctrl3)
          begin :drive_temp_real_exp_CE
            if (stall0) begin
               temp_real_exp_CE = 1'b0;
            end
            else begin
               case (gs_ctrl3) 

                  3'd1:                   begin
                     temp_real_exp_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && s_reg_349) begin
                           if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                              temp_real_exp_CE = 1'b1;
                           end
                           else begin
                              temp_real_exp_CE = 1'b0;
                           end
                        end
                        else begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 temp_real_exp_CE = 1'b0;
                              end
                              else begin
                                 temp_real_exp_CE = 1'b1;
                              end
                           end
                           else begin
                              temp_real_exp_CE = 1'b0;
                           end
                        end
                     end
                     else begin
                        if (en_1) begin
                           if (cycle1_state) begin
                              temp_real_exp_CE = 1'b0;
                           end
                           else begin
                              temp_real_exp_CE = 1'b1;
                           end
                        end
                        else begin
                           temp_real_exp_CE = 1'b0;
                        end
                     end
                  end
                  
                  3'd3:                   begin
                     if (s_reg_337) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  3'd4:                   begin
                     if (s_reg_337) begin
                        temp_real_exp_CE = s_reg_337;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  3'd5:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                        temp_real_exp_CE = 1'b1;
                     end
                     else begin
                        temp_real_exp_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_exp_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_337 or s_reg_349 or en_1 or en_2 or cycle1_state or cycle2_state or gs_ctrl4)
          begin :drive_temp_real_exp_RW
            if (stall0) begin
               temp_real_exp_RW = 1'b0;
            end
            else begin
               case (gs_ctrl4) 

                  2'd1:                   begin
                     temp_real_exp_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && s_reg_349) begin
                           temp_real_exp_RW = 1'b0;
                        end
                        else begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 temp_real_exp_RW = 1'b0;
                              end
                              else begin
                                 temp_real_exp_RW = 1'b1;
                              end
                           end
                           else begin
                              temp_real_exp_RW = 1'b0;
                           end
                        end
                     end
                     else begin
                        if (en_1) begin
                           if (cycle1_state) begin
                              temp_real_exp_RW = 1'b0;
                           end
                           else begin
                              temp_real_exp_RW = 1'b1;
                           end
                        end
                        else begin
                           temp_real_exp_RW = 1'b0;
                        end
                     end
                  end
                  
                  2'd3:                   begin
                     if (s_reg_337) begin
                        temp_real_exp_RW = 1'b1;
                     end
                     else begin
                        temp_real_exp_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_exp_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx13i8c
         always @(o_dft_real_data_sign or DFT_compute_Add_3Ux1U_4U_4_12_out1 or DFT_compute_Add_3Ux1U_3U_4_19_out1 or DFT_compute_Add_3Ux2U_4U_4_34_out1[3] or DFT_compute_Add_3Ux2U_3U_4_36_out1 or gs_ctrl9 or s_reg_336_slice or s_reg_335_slice)
          begin :drive_temp_imag_man_in1
            case (gs_ctrl9) 

               4'd01:                begin
                  temp_imag_man_in1 = s_reg_336_slice;
               end
               
               4'd02:                begin
                  temp_imag_man_in1 = s_reg_335_slice;
               end
               
               4'd03:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                     temp_imag_man_in1 = DFT_compute_Add_3Ux1U_3U_4_19_out1;
                  end
                  else begin
                     temp_imag_man_in1 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                  end
               end
               
               4'd04:                begin
                  if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                     temp_imag_man_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
                  end
                  else begin
                     temp_imag_man_in1 = DFT_compute_Add_3Ux1U_3U_4_19_out1;
                  end
               end
               
               4'd05:                begin
                  temp_imag_man_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
               end
               
               4'd06:                begin
                  if (o_dft_real_data_sign) begin
                     temp_imag_man_in1 = 3'd4;
                  end
                  else begin
                     temp_imag_man_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
                  end
               end
               
               4'd07:                begin
                  temp_imag_man_in1 = 3'd4;
               end
               
               4'd08:                begin
                  temp_imag_man_in1 = 3'd5;
               end
               
               4'd09:                begin
                  temp_imag_man_in1 = 3'd1;
               end
               
               4'd10:                begin
                  temp_imag_man_in1 = 3'd6;
               end
               
               4'd11:                begin
                  temp_imag_man_in1 = 3'd2;
               end
               
               4'd12:                begin
                  temp_imag_man_in1 = 3'd7;
               end
               
               4'd13:                begin
                  temp_imag_man_in1 = 3'd3;
               end
               
               default:                begin
                  temp_imag_man_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_23bx4i1c
         always @(o_dft_imag_data_man or temp_imag_man_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[22:0] or gs_ctrl10)
          begin :drive_temp_imag_man_DIN
            case (gs_ctrl10) 

               2'd1:                begin
                  temp_imag_man_DIN = temp_imag_man_out1;
               end
               
               2'd2:                begin
                  temp_imag_man_DIN = o_dft_imag_data_man;
               end
               
               2'd3:                begin
                  temp_imag_man_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[22:0];
               end
               
               default:                begin
                  temp_imag_man_DIN = 23'd0000000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(stall0 or s_reg_337 or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or DFT_compute_Add_3Ux3U_4U_4_51_out1[3] or en_2 or cycle2_state or gs_ctrl11)
          begin :drive_temp_imag_man_CE
            if (stall0) begin
               temp_imag_man_CE = 1'b0;
            end
            else begin
               case (gs_ctrl11) 

                  3'd1:                   begin
                     temp_imag_man_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && (s_reg_349 && DFT_compute_LessThan_3Ux4U_1U_4_16_out1)) begin
                           temp_imag_man_CE = 1'b1;
                        end
                        else begin
                           temp_imag_man_CE = 1'b0;
                        end
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  3'd3:                   begin
                     if (s_reg_337) begin
                        temp_imag_man_CE = 1'b1;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  3'd4:                   begin
                     if (s_reg_337) begin
                        temp_imag_man_CE = s_reg_337;
                     end
                     else begin
                        temp_imag_man_CE = 1'b0;
                     end
                  end
                  
                  3'd5:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                        temp_imag_man_CE = 1'b1;
                     end
                     else begin
                        if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                           temp_imag_man_CE = 1'b1;
                        end
                        else begin
                           temp_imag_man_CE = 1'b0;
                        end
                     end
                  end
                  
                  3'd6:                   begin
                     if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                        temp_imag_man_CE = 1'b0;
                     end
                     else begin
                        temp_imag_man_CE = 1'b1;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_man_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_337 or gs_ctrl12)
          begin :drive_temp_imag_man_RW
            if (stall0) begin
               temp_imag_man_RW = 1'b0;
            end
            else begin
               case (gs_ctrl12) 

                  2'd1:                   begin
                     temp_imag_man_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_337) begin
                        temp_imag_man_RW = 1'b1;
                     end
                     else begin
                        temp_imag_man_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_man_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx13i8c
         always @(o_dft_real_data_sign or DFT_compute_Add_3Ux1U_4U_4_12_out1 or DFT_compute_Add_3Ux1U_3U_4_19_out1 or DFT_compute_Add_3Ux2U_4U_4_34_out1[3] or DFT_compute_Add_3Ux2U_3U_4_36_out1 or gs_ctrl9 or s_reg_336_slice or s_reg_335_slice)
          begin :drive_temp_imag_exp_in1
            case (gs_ctrl9) 

               4'd01:                begin
                  temp_imag_exp_in1 = s_reg_336_slice;
               end
               
               4'd02:                begin
                  temp_imag_exp_in1 = s_reg_335_slice;
               end
               
               4'd03:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                     temp_imag_exp_in1 = DFT_compute_Add_3Ux1U_3U_4_19_out1;
                  end
                  else begin
                     temp_imag_exp_in1 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                  end
               end
               
               4'd04:                begin
                  if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                     temp_imag_exp_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
                  end
                  else begin
                     temp_imag_exp_in1 = DFT_compute_Add_3Ux1U_3U_4_19_out1;
                  end
               end
               
               4'd05:                begin
                  temp_imag_exp_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
               end
               
               4'd06:                begin
                  if (o_dft_real_data_sign) begin
                     temp_imag_exp_in1 = 3'd4;
                  end
                  else begin
                     temp_imag_exp_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
                  end
               end
               
               4'd07:                begin
                  temp_imag_exp_in1 = 3'd4;
               end
               
               4'd08:                begin
                  temp_imag_exp_in1 = 3'd5;
               end
               
               4'd09:                begin
                  temp_imag_exp_in1 = 3'd1;
               end
               
               4'd10:                begin
                  temp_imag_exp_in1 = 3'd6;
               end
               
               4'd11:                begin
                  temp_imag_exp_in1 = 3'd2;
               end
               
               4'd12:                begin
                  temp_imag_exp_in1 = 3'd7;
               end
               
               4'd13:                begin
                  temp_imag_exp_in1 = 3'd3;
               end
               
               default:                begin
                  temp_imag_exp_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_8bx4i1c
         always @(o_dft_imag_data_exp or temp_imag_exp_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:23] or gs_ctrl10)
          begin :drive_temp_imag_exp_DIN
            case (gs_ctrl10) 

               2'd1:                begin
                  temp_imag_exp_DIN = temp_imag_exp_out1;
               end
               
               2'd2:                begin
                  temp_imag_exp_DIN = o_dft_imag_data_exp;
               end
               
               2'd3:                begin
                  temp_imag_exp_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:23];
               end
               
               default:                begin
                  temp_imag_exp_DIN = 8'd000;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(stall0 or s_reg_337 or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or DFT_compute_Add_3Ux3U_4U_4_51_out1[3] or en_2 or cycle2_state or gs_ctrl11)
          begin :drive_temp_imag_exp_CE
            if (stall0) begin
               temp_imag_exp_CE = 1'b0;
            end
            else begin
               case (gs_ctrl11) 

                  3'd1:                   begin
                     temp_imag_exp_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && (s_reg_349 && DFT_compute_LessThan_3Ux4U_1U_4_16_out1)) begin
                           temp_imag_exp_CE = 1'b1;
                        end
                        else begin
                           temp_imag_exp_CE = 1'b0;
                        end
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  3'd3:                   begin
                     if (s_reg_337) begin
                        temp_imag_exp_CE = 1'b1;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  3'd4:                   begin
                     if (s_reg_337) begin
                        temp_imag_exp_CE = s_reg_337;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b0;
                     end
                  end
                  
                  3'd5:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                        temp_imag_exp_CE = 1'b1;
                     end
                     else begin
                        if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                           temp_imag_exp_CE = 1'b1;
                        end
                        else begin
                           temp_imag_exp_CE = 1'b0;
                        end
                     end
                  end
                  
                  3'd6:                   begin
                     if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                        temp_imag_exp_CE = 1'b0;
                     end
                     else begin
                        temp_imag_exp_CE = 1'b1;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_exp_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_337 or gs_ctrl12)
          begin :drive_temp_imag_exp_RW
            if (stall0) begin
               temp_imag_exp_RW = 1'b0;
            end
            else begin
               case (gs_ctrl12) 

                  2'd1:                   begin
                     temp_imag_exp_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_337) begin
                        temp_imag_exp_RW = 1'b1;
                     end
                     else begin
                        temp_imag_exp_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_exp_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx11i8c
         always @(s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or cycle2_state or gs_ctrl1 or s_reg_336_slice or s_reg_335_slice)
          begin :drive_temp_real_sign_in1
            case (gs_ctrl1) 

               4'd01:                begin
                  if (!cycle2_state && s_reg_349) begin
                     if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                        temp_real_sign_in1 = 3'd0;
                     end
                     else begin
                        temp_real_sign_in1 = s_reg_336_slice;
                     end
                  end
                  else begin
                     temp_real_sign_in1 = s_reg_336_slice;
                  end
               end
               
               4'd02:                begin
                  temp_real_sign_in1 = s_reg_336_slice;
               end
               
               4'd03:                begin
                  temp_real_sign_in1 = s_reg_335_slice;
               end
               
               4'd04:                begin
                  temp_real_sign_in1 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
               end
               
               4'd05:                begin
                  temp_real_sign_in1 = 3'd4;
               end
               
               4'd06:                begin
                  temp_real_sign_in1 = 3'd5;
               end
               
               4'd07:                begin
                  temp_real_sign_in1 = 3'd1;
               end
               
               4'd08:                begin
                  temp_real_sign_in1 = 3'd6;
               end
               
               4'd09:                begin
                  temp_real_sign_in1 = 3'd2;
               end
               
               4'd10:                begin
                  temp_real_sign_in1 = 3'd7;
               end
               
               4'd11:                begin
                  temp_real_sign_in1 = 3'd3;
               end
               
               default:                begin
                  temp_real_sign_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_1bx5i1c
         always @(o_dft_real_data_sign or DFT_compute_N_Muxb_1_2_3_4_13_out1 or temp_real_sign_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31] or gs_ctrl2)
          begin :drive_temp_real_sign_DIN
            case (gs_ctrl2) 

               3'd1:                begin
                  temp_real_sign_DIN = DFT_compute_N_Muxb_1_2_3_4_13_out1;
               end
               
               3'd2:                begin
                  temp_real_sign_DIN = temp_real_sign_out1;
               end
               
               3'd3:                begin
                  temp_real_sign_DIN = o_dft_real_data_sign;
               end
               
               3'd4:                begin
                  temp_real_sign_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31];
               end
               
               default:                begin
                  temp_real_sign_DIN = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(stall0 or s_reg_337 or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or en_1 or en_2 or cycle1_state or cycle2_state or gs_ctrl19)
          begin :drive_temp_real_sign_CE
            if (stall0) begin
               temp_real_sign_CE = 1'b0;
            end
            else begin
               case (gs_ctrl19) 

                  3'd1:                   begin
                     temp_real_sign_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && s_reg_349) begin
                           if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                              temp_real_sign_CE = 1'b1;
                           end
                           else begin
                              temp_real_sign_CE = 1'b0;
                           end
                        end
                        else begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 temp_real_sign_CE = 1'b0;
                              end
                              else begin
                                 temp_real_sign_CE = 1'b1;
                              end
                           end
                           else begin
                              temp_real_sign_CE = 1'b0;
                           end
                        end
                     end
                     else begin
                        if (en_1) begin
                           if (cycle1_state) begin
                              temp_real_sign_CE = 1'b0;
                           end
                           else begin
                              temp_real_sign_CE = 1'b1;
                           end
                        end
                        else begin
                           temp_real_sign_CE = 1'b0;
                        end
                     end
                  end
                  
                  3'd3:                   begin
                     if (s_reg_337) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  3'd4:                   begin
                     if (s_reg_337) begin
                        temp_real_sign_CE = s_reg_337;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  3'd5:                   begin
                     if (!DFT_compute_Add_3Ux1U_4U_4_12_out1[3] && DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                        temp_real_sign_CE = 1'b1;
                     end
                     else begin
                        temp_real_sign_CE = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_sign_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_337 or s_reg_349 or en_1 or en_2 or cycle1_state or cycle2_state or gs_ctrl20)
          begin :drive_temp_real_sign_RW
            if (stall0) begin
               temp_real_sign_RW = 1'b0;
            end
            else begin
               case (gs_ctrl20) 

                  2'd1:                   begin
                     temp_real_sign_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && s_reg_349) begin
                           temp_real_sign_RW = 1'b0;
                        end
                        else begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 temp_real_sign_RW = 1'b0;
                              end
                              else begin
                                 temp_real_sign_RW = 1'b1;
                              end
                           end
                           else begin
                              temp_real_sign_RW = 1'b0;
                           end
                        end
                     end
                     else begin
                        if (en_1) begin
                           if (cycle1_state) begin
                              temp_real_sign_RW = 1'b0;
                           end
                           else begin
                              temp_real_sign_RW = 1'b1;
                           end
                        end
                        else begin
                           temp_real_sign_RW = 1'b0;
                        end
                     end
                  end
                  
                  2'd3:                   begin
                     if (s_reg_337) begin
                        temp_real_sign_RW = 1'b1;
                     end
                     else begin
                        temp_real_sign_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_real_sign_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx13i8c
         always @(o_dft_real_data_sign or DFT_compute_Add_3Ux1U_4U_4_12_out1 or DFT_compute_Add_3Ux1U_3U_4_19_out1 or DFT_compute_Add_3Ux2U_4U_4_34_out1[3] or DFT_compute_Add_3Ux2U_3U_4_36_out1 or gs_ctrl9 or s_reg_336_slice or s_reg_335_slice)
          begin :drive_temp_imag_sign_in1
            case (gs_ctrl9) 

               4'd01:                begin
                  temp_imag_sign_in1 = s_reg_336_slice;
               end
               
               4'd02:                begin
                  temp_imag_sign_in1 = s_reg_335_slice;
               end
               
               4'd03:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                     temp_imag_sign_in1 = DFT_compute_Add_3Ux1U_3U_4_19_out1;
                  end
                  else begin
                     temp_imag_sign_in1 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
                  end
               end
               
               4'd04:                begin
                  if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                     temp_imag_sign_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
                  end
                  else begin
                     temp_imag_sign_in1 = DFT_compute_Add_3Ux1U_3U_4_19_out1;
                  end
               end
               
               4'd05:                begin
                  temp_imag_sign_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
               end
               
               4'd06:                begin
                  if (o_dft_real_data_sign) begin
                     temp_imag_sign_in1 = 3'd4;
                  end
                  else begin
                     temp_imag_sign_in1 = DFT_compute_Add_3Ux2U_3U_4_36_out1;
                  end
               end
               
               4'd07:                begin
                  temp_imag_sign_in1 = 3'd4;
               end
               
               4'd08:                begin
                  temp_imag_sign_in1 = 3'd5;
               end
               
               4'd09:                begin
                  temp_imag_sign_in1 = 3'd1;
               end
               
               4'd10:                begin
                  temp_imag_sign_in1 = 3'd6;
               end
               
               4'd11:                begin
                  temp_imag_sign_in1 = 3'd2;
               end
               
               4'd12:                begin
                  temp_imag_sign_in1 = 3'd7;
               end
               
               4'd13:                begin
                  temp_imag_sign_in1 = 3'd3;
               end
               
               default:                begin
                  temp_imag_sign_in1 = 3'd0;
               end
               
            endcase

         end

         // resource: mux_1bx4i1c
         always @(o_dft_imag_data_sign or temp_imag_sign_out1 or DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31] or gs_ctrl10)
          begin :drive_temp_imag_sign_DIN
            case (gs_ctrl10) 

               2'd1:                begin
                  temp_imag_sign_DIN = temp_imag_sign_out1;
               end
               
               2'd2:                begin
                  temp_imag_sign_DIN = o_dft_imag_data_sign;
               end
               
               2'd3:                begin
                  temp_imag_sign_DIN = DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[31];
               end
               
               default:                begin
                  temp_imag_sign_DIN = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx3i2c
         always @(stall0 or s_reg_337 or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_LessThan_3Ux4U_1U_4_16_out1 or DFT_compute_Add_3Ux3U_4U_4_51_out1[3] or en_2 or cycle2_state or gs_ctrl23)
          begin :drive_temp_imag_sign_CE
            if (stall0) begin
               temp_imag_sign_CE = 1'b0;
            end
            else begin
               case (gs_ctrl23) 

                  3'd1:                   begin
                     temp_imag_sign_CE = 1'b1;
                  end
                  
                  3'd2:                   begin
                     if (en_2) begin
                        if (!cycle2_state && (s_reg_349 && DFT_compute_LessThan_3Ux4U_1U_4_16_out1)) begin
                           temp_imag_sign_CE = 1'b1;
                        end
                        else begin
                           temp_imag_sign_CE = 1'b0;
                        end
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  3'd3:                   begin
                     if (s_reg_337) begin
                        temp_imag_sign_CE = 1'b1;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  3'd4:                   begin
                     if (s_reg_337) begin
                        temp_imag_sign_CE = s_reg_337;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b0;
                     end
                  end
                  
                  3'd5:                   begin
                     if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                        temp_imag_sign_CE = 1'b1;
                     end
                     else begin
                        if (DFT_compute_LessThan_3Ux4U_1U_4_16_out1) begin
                           temp_imag_sign_CE = 1'b1;
                        end
                        else begin
                           temp_imag_sign_CE = 1'b0;
                        end
                     end
                  end
                  
                  3'd6:                   begin
                     if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                        temp_imag_sign_CE = 1'b0;
                     end
                     else begin
                        temp_imag_sign_CE = 1'b1;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_sign_CE = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         always @(stall0 or s_reg_337 or gs_ctrl24)
          begin :drive_temp_imag_sign_RW
            if (stall0) begin
               temp_imag_sign_RW = 1'b0;
            end
            else begin
               case (gs_ctrl24) 

                  2'd1:                   begin
                     temp_imag_sign_RW = 1'b1;
                  end
                  
                  2'd2:                   begin
                     if (s_reg_337) begin
                        temp_imag_sign_RW = 1'b1;
                     end
                     else begin
                        temp_imag_sign_RW = 1'b0;
                     end
                  end
                  
                  default:                   begin
                     temp_imag_sign_RW = 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: DFT_compute_Add_3Ux1U_4U_4  instance: DFT_compute_Add_3Ux1U_4U_4_12
         assign DFT_compute_Add_3Ux1U_4U_4_12_out1 = {1'b0, s_reg_335_slice} + 4'd01;

         // resource: DFT_compute_N_Muxb_1_2_3_4
         always @(i_real_data_sign or i_real_m_stall_reg_sign or i_real_m_stall_reg_full)
          begin :DFT_compute_N_Muxb_1_2_3_4_13
            if (i_real_m_stall_reg_full) begin
               DFT_compute_N_Muxb_1_2_3_4_13_out1 = i_real_m_stall_reg_sign;
            end
            else begin
               DFT_compute_N_Muxb_1_2_3_4_13_out1 = i_real_data_sign;
            end
         end

         // resource: DFT_compute_N_Mux_8_2_1_4
         always @(i_real_data_exp or i_real_m_stall_reg_exp or i_real_m_stall_reg_full)
          begin :DFT_compute_N_Mux_8_2_1_4_14
            if (i_real_m_stall_reg_full) begin
               DFT_compute_N_Mux_8_2_1_4_14_out1 = i_real_m_stall_reg_exp;
            end
            else begin
               DFT_compute_N_Mux_8_2_1_4_14_out1 = i_real_data_exp;
            end
         end

         // resource: DFT_compute_N_Mux_23_2_2_4
         always @(i_real_data_man or i_real_m_stall_reg_man or i_real_m_stall_reg_full)
          begin :DFT_compute_N_Mux_23_2_2_4_15
            if (i_real_m_stall_reg_full) begin
               DFT_compute_N_Mux_23_2_2_4_15_out1 = i_real_m_stall_reg_man;
            end
            else begin
               DFT_compute_N_Mux_23_2_2_4_15_out1 = i_real_data_man;
            end
         end

         // resource: mux_3bx2i1c
         always @(DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0] or gs_ctrl25)
          begin :drive_DFT_compute_LessThan_3Ux4U_1U_4_16_in2
            if (gs_ctrl25) begin
               DFT_compute_LessThan_3Ux4U_1U_4_16_in2 = DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0];
            end
            else begin
               DFT_compute_LessThan_3Ux4U_1U_4_16_in2 = 3'd0;
            end
         end

         // resource: mux_3bx2i1c
         always @(DFT_compute_Add_3Ux1U_4U_4_12_out1[2:0] or gs_ctrl25)
          begin :drive_DFT_compute_LessThan_3Ux4U_1U_4_16_in1_slice
            if (gs_ctrl25) begin
               DFT_compute_LessThan_3Ux4U_1U_4_16_in1_slice = {{DFT_compute_Add_3Ux1U_4U_4_12_out1[0], DFT_compute_Add_3Ux1U_4U_4_12_out1[1]}, DFT_compute_Add_3Ux1U_4U_4_12_out1[2]};
            end
            else begin
               DFT_compute_LessThan_3Ux4U_1U_4_16_in1_slice = 3'd0;
            end
         end

         // resource: DFT_compute_LessThan_3Ux4U_1U_4  instance: DFT_compute_LessThan_3Ux4U_1U_4_16
         assign DFT_compute_LessThan_3Ux4U_1U_4_16_out1 = {1'b0, DFT_compute_LessThan_3Ux4U_1U_4_16_in2} < {1'b0, DFT_compute_LessThan_3Ux4U_1U_4_16_in1_slice};

         // resource: mux_1bx2i1c
         always @(s_reg_344 or gs_ctrl27)
          begin :drive_DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_sign
            if (gs_ctrl27) begin
               DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_sign = s_reg_344;
            end
            else begin
               DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_sign = 1'b0;
            end
         end

         // resource: mux_8bx2i1c
         always @(s_reg_348 or gs_ctrl27)
          begin :drive_DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_exp
            if (gs_ctrl27) begin
               DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_exp = s_reg_348;
            end
            else begin
               DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_exp = 8'd000;
            end
         end

         // resource: mux_23bx2i1c
         always @(s_reg_340[22:0] or gs_ctrl27)
          begin :drive_DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_man
            if (gs_ctrl27) begin
               DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_man = s_reg_340[22:0];
            end
            else begin
               DFT_compute_cynw_cm_float_sin_E8_M23_0_54_a_man = 23'd0000000;
            end
         end

         // resource: mux_3bx2i1c
         always @(DFT_compute_Add_3Ux2U_4U_4_34_out1[2:0] or gs_ctrl30)
          begin :drive_DFT_compute_Add_3Ux1U_3U_4_19_in2
            if (gs_ctrl30) begin
               DFT_compute_Add_3Ux1U_3U_4_19_in2 = DFT_compute_Add_3Ux2U_4U_4_34_out1[2:0];
            end
            else begin
               DFT_compute_Add_3Ux1U_3U_4_19_in2 = 3'd0;
            end
         end

         // resource: DFT_compute_Add_3Ux1U_3U_4  instance: DFT_compute_Add_3Ux1U_3U_4_19
         assign DFT_compute_Add_3Ux1U_3U_4_19_out1 = DFT_compute_Add_3Ux1U_3U_4_19_in2 + 3'd1;

         // resource: mux_1bx4i0c
         always @(o_dft_imag_data_sign or o_dft_real_data_sign or temp_imag_sign_out1 or temp_real_sign_out1 or gs_ctrl34)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign
            case (gs_ctrl34) 

               2'd1:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign = temp_real_sign_out1;
               end
               
               2'd2:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign = o_dft_imag_data_sign;
               end
               
               2'd3:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign = o_dft_real_data_sign;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_sign = temp_imag_sign_out1;
               end
               
            endcase

         end

         // resource: mux_8bx4i0c
         always @(o_dft_imag_data_exp or o_dft_real_data_exp or temp_imag_exp_out1 or temp_real_exp_out1 or gs_ctrl34)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp
            case (gs_ctrl34) 

               2'd1:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp = temp_real_exp_out1;
               end
               
               2'd2:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp = o_dft_imag_data_exp;
               end
               
               2'd3:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp = o_dft_real_data_exp;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_exp = temp_imag_exp_out1;
               end
               
            endcase

         end

         // resource: mux_23bx4i0c
         always @(o_dft_imag_data_man or o_dft_real_data_man or temp_imag_man_out1 or temp_real_man_out1 or gs_ctrl34)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man
            case (gs_ctrl34) 

               2'd1:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man = temp_real_man_out1;
               end
               
               2'd2:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man = o_dft_imag_data_man;
               end
               
               2'd3:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man = o_dft_real_data_man;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_a_man = temp_imag_man_out1;
               end
               
            endcase

         end

         // resource: mux_1bx9i0c
         always @(o_dft_imag_data_sign or s_reg_337 or s_reg_350 or s_reg_353 or s_reg_356 or s_reg_359 or s_reg_362 or sreg_2[31] or sreg_4[31] or gs_ctrl37)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign
            case (gs_ctrl37) 

               4'd01:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = sreg_2[31];
               end
               
               4'd02:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = s_reg_362;
               end
               
               4'd03:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = sreg_4[31];
               end
               
               4'd04:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = o_dft_imag_data_sign;
               end
               
               4'd05:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = s_reg_350;
               end
               
               4'd06:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = s_reg_353;
               end
               
               4'd07:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = s_reg_356;
               end
               
               4'd08:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = s_reg_359;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_sign = s_reg_337;
               end
               
            endcase

         end

         // resource: mux_8bx9i0c
         always @(o_dft_imag_data_exp or s_reg_351 or s_reg_354 or s_reg_357 or s_reg_360 or s_reg_363 or sreg_1[30:23] or sreg_2[30:23] or sreg_4[30:23] or gs_ctrl37)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp
            case (gs_ctrl37) 

               4'd01:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = sreg_2[30:23];
               end
               
               4'd02:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = s_reg_363;
               end
               
               4'd03:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = sreg_4[30:23];
               end
               
               4'd04:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = o_dft_imag_data_exp;
               end
               
               4'd05:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = s_reg_351;
               end
               
               4'd06:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = s_reg_354;
               end
               
               4'd07:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = s_reg_357;
               end
               
               4'd08:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = s_reg_360;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_exp = sreg_1[30:23];
               end
               
            endcase

         end

         // resource: mux_23bx9i0c
         always @(o_dft_imag_data_man or s_reg_352 or s_reg_355 or s_reg_358 or s_reg_361 or s_reg_364 or sreg_1[22:0] or sreg_2[22:0] or sreg_4[22:0] or gs_ctrl37)
          begin :drive_DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man
            case (gs_ctrl37) 

               4'd01:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = sreg_2[22:0];
               end
               
               4'd02:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = s_reg_364;
               end
               
               4'd03:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = sreg_4[22:0];
               end
               
               4'd04:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = o_dft_imag_data_man;
               end
               
               4'd05:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = s_reg_352;
               end
               
               4'd06:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = s_reg_355;
               end
               
               4'd07:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = s_reg_358;
               end
               
               4'd08:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = s_reg_361;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_mul_E8_M23_1_21_b_man = sreg_1[22:0];
               end
               
            endcase

         end

         // resource: mux_1bx2i0c
         always @(s_reg_340[31] or s_reg_347[31] or gs_ctrl40)
          begin :drive_DFT_compute_Not_1U_1U_4_22_in1
            if (gs_ctrl40) begin
               DFT_compute_Not_1U_1U_4_22_in1 = s_reg_347[31];
            end
            else begin
               DFT_compute_Not_1U_1U_4_22_in1 = s_reg_340[31];
            end
         end

         // resource: DFT_compute_Not_1U_1U_4  instance: DFT_compute_Not_1U_1U_4_22
         assign DFT_compute_Not_1U_1U_4_22_out1 = !DFT_compute_Not_1U_1U_4_22_in1;

         // resource: mux_1bx6i1c
         always @(s_reg_344 or s_reg_347[31] or temp_imag_sign_out1 or temp_real_sign_out1 or DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[31] or gs_ctrl41)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign
            case (gs_ctrl41) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign = temp_real_sign_out1;
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign = s_reg_347[31];
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign = temp_imag_sign_out1;
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign = 1'b0;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign = s_reg_344;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_sign = DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[31];
               end
               
            endcase

         end

         // resource: mux_8bx6i1c
         always @(s_reg_347[30:23] or s_reg_348 or temp_imag_exp_out1 or temp_real_exp_out1 or DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[30:23] or gs_ctrl41)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp
            case (gs_ctrl41) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp = temp_real_exp_out1;
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp = s_reg_347[30:23];
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp = temp_imag_exp_out1;
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp = 8'd000;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp = s_reg_348;
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_exp = DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[30:23];
               end
               
            endcase

         end

         // resource: mux_23bx6i1c
         always @(s_reg_340[22:0] or s_reg_347[22:0] or temp_imag_man_out1 or temp_real_man_out1 or DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[22:0] or gs_ctrl41)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man
            case (gs_ctrl41) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man = temp_real_man_out1;
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man = s_reg_347[22:0];
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man = temp_imag_man_out1;
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man = 23'd0000000;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man = s_reg_340[22:0];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_a_man = DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[22:0];
               end
               
            endcase

         end

         // resource: mux_1bx8i0c
         always @(s_reg_340[31] or s_reg_344 or s_reg_349 or DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[31] or DFT_compute_Not_1U_1U_4_22_out1 or DFT_compute_Not_1U_1U_4_25_out1 or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[31] or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x[31] or gs_ctrl44)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign
            case (gs_ctrl44) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = DFT_compute_Not_1U_1U_4_25_out1;
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[31];
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = s_reg_344;
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = s_reg_349;
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[31];
               end
               
               3'd6:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x[31];
               end
               
               3'd7:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = s_reg_340[31];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_sign = DFT_compute_Not_1U_1U_4_22_out1;
               end
               
            endcase

         end

         // resource: mux_8bx7i0c
         always @(s_reg_340[30:23] or s_reg_347[30:23] or s_reg_348 or DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[30:23] or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[30:23] or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x[30:23] or sreg_3[30:23] or gs_ctrl45)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp
            case (gs_ctrl45) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = sreg_3[30:23];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[30:23];
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = s_reg_348;
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[30:23];
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x[30:23];
               end
               
               3'd6:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = s_reg_347[30:23];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_exp = s_reg_340[30:23];
               end
               
            endcase

         end

         // resource: mux_23bx6i0c
         always @(s_reg_340[22:0] or s_reg_347[22:0] or DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[22:0] or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[22:0] or DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x[22:0] or sreg_3[22:0] or gs_ctrl46)
          begin :drive_DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man
            case (gs_ctrl46) 

               3'd1:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man = sreg_3[22:0];
               end
               
               3'd2:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man = DFT_compute_cynw_cm_float_mul_E8_M23_1_21_x[22:0];
               end
               
               3'd3:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[22:0];
               end
               
               3'd4:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man = DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_x[22:0];
               end
               
               3'd5:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man = s_reg_347[22:0];
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_add2_E8_M23_0_24_b_man = s_reg_340[22:0];
               end
               
            endcase

         end

         // resource: mux_1bx2i0c
         always @(s_reg_344 or s_reg_349 or gs_ctrl47)
          begin :drive_DFT_compute_Not_1U_1U_4_25_in1
            if (gs_ctrl47) begin
               DFT_compute_Not_1U_1U_4_25_in1 = s_reg_349;
            end
            else begin
               DFT_compute_Not_1U_1U_4_25_in1 = s_reg_344;
            end
         end

         // resource: DFT_compute_Not_1U_1U_4  instance: DFT_compute_Not_1U_1U_4_25
         assign DFT_compute_Not_1U_1U_4_25_out1 = !DFT_compute_Not_1U_1U_4_25_in1;

         // resource: DFT_compute_Add_3Ux2U_4U_4  instance: DFT_compute_Add_3Ux2U_4U_4_34
         assign DFT_compute_Add_3Ux2U_4U_4_34_out1 = {1'b0, s_reg_335_slice} + 4'd02;

         // resource: mux_3bx4i2c
         always @(DFT_compute_Add_3Ux3U_4U_4_51_out1[2:0] or gs_ctrl48 or s_reg_335_slice)
          begin :drive_DFT_compute_Add_3Ux2U_3U_4_36_in2
            case (gs_ctrl48) 

               2'd1:                begin
                  DFT_compute_Add_3Ux2U_3U_4_36_in2 = DFT_compute_Add_3Ux3U_4U_4_51_out1[2:0];
               end
               
               2'd2:                begin
                  DFT_compute_Add_3Ux2U_3U_4_36_in2 = 3'd1;
               end
               
               2'd3:                begin
                  DFT_compute_Add_3Ux2U_3U_4_36_in2 = s_reg_335_slice;
               end
               
               default:                begin
                  DFT_compute_Add_3Ux2U_3U_4_36_in2 = 3'd0;
               end
               
            endcase

         end

         // resource: DFT_compute_Add_3Ux2U_3U_4  instance: DFT_compute_Add_3Ux2U_3U_4_36
         assign DFT_compute_Add_3Ux2U_3U_4_36_out1 = DFT_compute_Add_3Ux2U_3U_4_36_in2 + 3'd2;

         // resource: DFT_compute_Add_3Ux3U_4U_4  instance: DFT_compute_Add_3Ux3U_4U_4_51
         assign DFT_compute_Add_3Ux3U_4U_4_51_out1 = {1'b0, s_reg_335_slice} + 4'd04;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_sign
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_sign = 1'b1;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_exp
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_exp = 8'd129;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_man
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_a_man = 23'd4788187;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_sign
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_sign = 1'b0;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_exp
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_exp = 8'd130;

         // instance: drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_man
         assign DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_b_man = 23'd0000000;

         // resource: mux_1bx2i2c
         always @(DFT_compute_Add_3Ux2U_4U_4_34_out1[3] or DFT_compute_Add_3Ux3U_4U_4_51_out1[3] or gs_ctrl49)
          begin :drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept
            case (gs_ctrl49) 

               2'd1:                begin
                  if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept = 1'b1;
                  end
                  else begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept = 1'b0;
                  end
               end
               
               2'd2:                begin
                  if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept = 1'b0;
                  end
                  else begin
                     DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept = 1'b1;
                  end
               end
               
               default:                begin
                  DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_accept = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         always @(gs_ctrl50)
          begin :drive_DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_accept
            if (gs_ctrl50) begin
               DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_accept = 1'b1;
            end
            else begin
               DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_62_accept = 1'b0;
            end
         end

         // resource: mux_1bx3i2c
         always @(DFT_compute_gen_busy_r_1_2_out1[0] or cycle1_state or global_state)
          begin :drive_rdy_1
            case (global_state) 

               7'd003:                begin
                  if (cycle1_state) begin
                     rdy_1 = 1'b1;
                  end
                  else begin
                     rdy_1 = !DFT_compute_gen_busy_r_1_2_out1[0];
                  end
               end
               
               default:                begin
                  rdy_1 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_vld_0
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd002:                      begin
                        vld_0 <= 1'b0;
                     end
                     
                     7'd003:                      begin
                        vld_0 <= en_0 | vld_0 & !rdy_1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // instance: drive_rdy_0
         assign rdy_0 = !vld_0 | rdy_1;

         // resource: mux_1bx2i1c
         always @(rdy_0 or global_state)
          begin :drive_en_0
            case (global_state) 

               7'd003:                begin
                  en_0 = rdy_0;
               end
               
               default:                begin
                  en_0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         always @(rdy_1 or vld_0 or global_state)
          begin :drive_en_1
            case (global_state) 

               7'd003:                begin
                  en_1 = vld_0 & rdy_1;
               end
               
               default:                begin
                  en_1 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_vld_1
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd002:                      begin
                        vld_1 <= 1'b0;
                     end
                     
                     7'd003:                      begin
                        vld_1 <= en_1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         always @(vld_1 or global_state)
          begin :drive_en_2
            case (global_state) 

               7'd003:                begin
                  en_2 = vld_1;
               end
               
               default:                begin
                  en_2 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx3i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_cycle1_state
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd002:                      begin
                        cycle1_state <= 1'b1;
                     end
                     
                     7'd003:                      begin
                        if (en_0) begin
                           if (en_1) begin
                              if (cycle1_state) begin
                                 cycle1_state <= drain;
                              end
                              else begin
                                 cycle1_state <= s_reg_337;
                              end
                           end
                           else begin
                              cycle1_state <= drain;
                           end
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_1bx2i1c
         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_cycle2_state
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd002:                      begin
                        cycle2_state <= 1'b1;
                     end
                     
                     7'd003:                      begin
                        if (en_1) begin
                           cycle2_state <= cycle1_state;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_31
         always @(posedge i_clk)
          begin :drive_sreg_1
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd007:                      begin
                        if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                           sreg_1 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:0];
                        end
                     end
                     
                     7'd015, 7'd025:                      begin
                        sreg_1 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:0];
                     end
                     
                     7'd024:                      begin
                        if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                        end
                        else begin
                           sreg_1 <= DFT_compute_cynw_cm_float_sin_E8_M23_0_54_x[30:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_sreg_2
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd008, 7'd016, 7'd025:                      begin
                        sreg_2 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[31:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_31bx2i0c
         // resource: regr_en_31
         always @(posedge i_clk)
          begin :drive_sreg_3
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd009, 7'd018, 7'd036, 7'd042, 7'd049, 7'd057, 7'd064:                      begin
                        sreg_3 <= DFT_compute_cynw_cm_float_add2_E8_M23_0_24_x[30:0];
                     end
                     
                     7'd024:                      begin
                        if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                           sreg_3 <= DFT_compute_cynw_cm_float_div_ieee_E8_M23_0_52_x[30:0];
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_32
         always @(posedge i_clk)
          begin :drive_sreg_4
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     7'd032, 7'd041:                      begin
                        sreg_4 <= DFT_compute_cynw_cm_float_cos_E8_M23_0_55_x[31:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_sc_7
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 7'd000;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_7bx7i6c
         always @(o_dft_real_data_sign or s_reg_349 or DFT_compute_Add_3Ux1U_4U_4_12_out1[3] or DFT_compute_Add_3Ux2U_4U_4_34_out1[3] or DFT_compute_Add_3Ux3U_4U_4_51_out1[3] or en_2 or cycle2_state or global_state)
          begin :drive_global_state_next
            case (global_state) 

               7'd000, 7'd094:                begin
                  global_state_next = 7'd001;
               end
               
               7'd003:                begin
                  if (en_2) begin
                     if (!cycle2_state && s_reg_349) begin
                        global_state_next = global_state + 7'd001;
                     end
                     else begin
                        global_state_next = 7'd003;
                     end
                  end
                  else begin
                     global_state_next = 7'd003;
                  end
               end
               
               7'd007:                begin
                  if (DFT_compute_Add_3Ux1U_4U_4_12_out1[3]) begin
                     global_state_next = global_state + 7'd001;
                  end
                  else begin
                     global_state_next = 7'd004;
                  end
               end
               
               7'd015:                begin
                  if (DFT_compute_Add_3Ux2U_4U_4_34_out1[3]) begin
                     global_state_next = global_state + 7'd001;
                  end
                  else begin
                     global_state_next = 7'd008;
                  end
               end
               
               7'd024:                begin
                  if (DFT_compute_Add_3Ux3U_4U_4_51_out1[3]) begin
                     global_state_next = global_state + 7'd001;
                  end
                  else begin
                     global_state_next = 7'd016;
                  end
               end
               
               7'd040:                begin
                  if (o_dft_real_data_sign) begin
                     global_state_next = global_state + 7'd001;
                  end
                  else begin
                     global_state_next = 7'd033;
                  end
               end
               
               default:                begin
                  global_state_next = global_state + 7'd001;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd003:                         begin
                           gs_ctrl0 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx12i12c
         // resource: regr_en_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl1
            if (i_rst == 1'b0) begin
               gs_ctrl1 <= 4'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd003:                         begin
                           gs_ctrl1 <= 4'd01;
                        end
                        
                        7'd004, 7'd006, 7'd008, 7'd010, 7'd017, 7'd021, 7'd033, 7'd035:                         begin
                           gs_ctrl1 <= 4'd02;
                        end
                        
                        7'd005, 7'd009, 7'd012, 7'd013, 7'd020, 7'd022, 7'd023, 7'd034, 7'd037, 7'd038:                         begin
                           gs_ctrl1 <= 4'd03;
                        end
                        
                        7'd007:                         begin
                           gs_ctrl1 <= 4'd04;
                        end
                        
                        7'd039, 7'd045, 7'd082, 7'd083:                         begin
                           gs_ctrl1 <= 4'd05;
                        end
                        
                        7'd048, 7'd050, 7'd085, 7'd086:                         begin
                           gs_ctrl1 <= 4'd06;
                        end
                        
                        7'd049, 7'd052, 7'd053, 7'd073, 7'd074:                         begin
                           gs_ctrl1 <= 4'd07;
                        end
                        
                        7'd054, 7'd060, 7'd088, 7'd089:                         begin
                           gs_ctrl1 <= 4'd08;
                        end
                        
                        7'd059, 7'd061, 7'd062, 7'd076, 7'd077:                         begin
                           gs_ctrl1 <= 4'd09;
                        end
                        
                        7'd063, 7'd065, 7'd091, 7'd092:                         begin
                           gs_ctrl1 <= 4'd10;
                        end
                        
                        7'd064, 7'd067, 7'd068, 7'd079, 7'd080:                         begin
                           gs_ctrl1 <= 4'd11;
                        end
                        
                        default:                         begin
                           gs_ctrl1 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i5c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl2
            if (i_rst == 1'b0) begin
               gs_ctrl2 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd003:                         begin
                           gs_ctrl2 <= 3'd1;
                        end
                        
                        7'd005:                         begin
                           gs_ctrl2 <= 3'd2;
                        end
                        
                        7'd006:                         begin
                           gs_ctrl2 <= 3'd3;
                        end
                        
                        7'd010, 7'd013, 7'd021, 7'd023, 7'd035, 7'd038, 7'd045, 7'd047, 7'd050, 7'd053, 7'd060, 7'd062, 7'd065, 7'd068:                         begin
                           gs_ctrl2 <= 3'd4;
                        end
                        
                        default:                         begin
                           gs_ctrl2 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_ss_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl3
            if (i_rst == 1'b0) begin
               gs_ctrl3 <= 3'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd001, 7'd008, 7'd009, 7'd010, 7'd012, 7'd013, 7'd017, 7'd020, 7'd021, 7'd022, 7'd023, 7'd033, 7'd034, 7'd035, 7'd037, 7'd038, 7'd039, 7'd044, 7'd045, 7'd046, 7'd047, 7'd048, 7'd049, 7'd050, 7'd052, 7'd053, 7'd054, 7'd059, 7'd060, 7'd061, 7'd062, 7'd063, 7'd064, 7'd065, 7'd067, 7'd068, 7'd069, 7'd070, 7'd073, 7'd074, 7'd076, 7'd077, 7'd079, 7'd080, 7'd082, 7'd083, 7'd085, 7'd086, 7'd088, 7'd089, 7'd091, 7'd092, 7'd094:                         begin
                           gs_ctrl3 <= 3'd1;
                        end
                        
                        7'd003:                         begin
                           gs_ctrl3 <= 3'd2;
                        end
                        
                        7'd004:                         begin
                           gs_ctrl3 <= 3'd3;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl3 <= 3'd4;
                        end
                        
                        7'd007:                         begin
                           gs_ctrl3 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl3 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl4
            if (i_rst == 1'b0) begin
               gs_ctrl4 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd001, 7'd010, 7'd013, 7'd021, 7'd023, 7'd035, 7'd038, 7'd045, 7'd047, 7'd050, 7'd053, 7'd060, 7'd062, 7'd065, 7'd068, 7'd070, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092, 7'd094:                         begin
                           gs_ctrl4 <= 2'd1;
                        end
                        
                        7'd003:                         begin
                           gs_ctrl4 <= 2'd2;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl4 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl4 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx14i14c
         // resource: regr_en_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl9
            if (i_rst == 1'b0) begin
               gs_ctrl9 <= 4'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd004, 7'd006, 7'd012, 7'd020, 7'd037:                         begin
                           gs_ctrl9 <= 4'd01;
                        end
                        
                        7'd005, 7'd011, 7'd013, 7'd014, 7'd019, 7'd021, 7'd022, 7'd036, 7'd038, 7'd039:                         begin
                           gs_ctrl9 <= 4'd02;
                        end
                        
                        7'd007:                         begin
                           gs_ctrl9 <= 4'd03;
                        end
                        
                        7'd015:                         begin
                           gs_ctrl9 <= 4'd04;
                        end
                        
                        7'd024, 7'd032:                         begin
                           gs_ctrl9 <= 4'd05;
                        end
                        
                        7'd040:                         begin
                           gs_ctrl9 <= 4'd06;
                        end
                        
                        7'd044, 7'd082, 7'd083:                         begin
                           gs_ctrl9 <= 4'd07;
                        end
                        
                        7'd047, 7'd052, 7'd085, 7'd086:                         begin
                           gs_ctrl9 <= 4'd08;
                        end
                        
                        7'd051, 7'd053, 7'd054, 7'd073, 7'd074:                         begin
                           gs_ctrl9 <= 4'd09;
                        end
                        
                        7'd055, 7'd059, 7'd088, 7'd089:                         begin
                           gs_ctrl9 <= 4'd10;
                        end
                        
                        7'd058, 7'd060, 7'd061, 7'd076, 7'd077:                         begin
                           gs_ctrl9 <= 4'd11;
                        end
                        
                        7'd062, 7'd067, 7'd091, 7'd092:                         begin
                           gs_ctrl9 <= 4'd12;
                        end
                        
                        7'd066, 7'd068, 7'd069, 7'd079, 7'd080:                         begin
                           gs_ctrl9 <= 4'd13;
                        end
                        
                        default:                         begin
                           gs_ctrl9 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl10
            if (i_rst == 1'b0) begin
               gs_ctrl10 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd005:                         begin
                           gs_ctrl10 <= 2'd1;
                        end
                        
                        7'd006:                         begin
                           gs_ctrl10 <= 2'd2;
                        end
                        
                        7'd012, 7'd014, 7'd020, 7'd022, 7'd037, 7'd039, 7'd044, 7'd046, 7'd052, 7'd054, 7'd059, 7'd061, 7'd067, 7'd069:                         begin
                           gs_ctrl10 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl10 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx7i7c
         // resource: regr_en_ss_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl11
            if (i_rst == 1'b0) begin
               gs_ctrl11 <= 3'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd001, 7'd011, 7'd012, 7'd013, 7'd014, 7'd015, 7'd019, 7'd020, 7'd021, 7'd022, 7'd032, 7'd036, 7'd037, 7'd038, 7'd039, 7'd040, 7'd043, 7'd044, 7'd045, 7'd046, 7'd047, 7'd051, 7'd052, 7'd053, 7'd054, 7'd055, 7'd058, 7'd059, 7'd060, 7'd061, 7'd062, 7'd066, 7'd067, 7'd068, 7'd069, 7'd070, 7'd071, 7'd073, 7'd074, 7'd076, 7'd077, 7'd079, 7'd080, 7'd082, 7'd083, 7'd085, 7'd086, 7'd088, 7'd089, 7'd091, 7'd092, 7'd094:                         begin
                           gs_ctrl11 <= 3'd1;
                        end
                        
                        7'd003:                         begin
                           gs_ctrl11 <= 3'd2;
                        end
                        
                        7'd004:                         begin
                           gs_ctrl11 <= 3'd3;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl11 <= 3'd4;
                        end
                        
                        7'd007:                         begin
                           gs_ctrl11 <= 3'd5;
                        end
                        
                        7'd024:                         begin
                           gs_ctrl11 <= 3'd6;
                        end
                        
                        default:                         begin
                           gs_ctrl11 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl12
            if (i_rst == 1'b0) begin
               gs_ctrl12 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd001, 7'd012, 7'd014, 7'd020, 7'd022, 7'd037, 7'd039, 7'd044, 7'd046, 7'd052, 7'd054, 7'd059, 7'd061, 7'd067, 7'd069, 7'd071, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092, 7'd094:                         begin
                           gs_ctrl12 <= 2'd1;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl12 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl12 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_ss_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl19
            if (i_rst == 1'b0) begin
               gs_ctrl19 <= 3'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd008, 7'd009, 7'd010, 7'd012, 7'd013, 7'd017, 7'd020, 7'd021, 7'd022, 7'd023, 7'd033, 7'd034, 7'd035, 7'd037, 7'd038, 7'd039, 7'd044, 7'd045, 7'd046, 7'd047, 7'd048, 7'd049, 7'd050, 7'd052, 7'd053, 7'd054, 7'd059, 7'd060, 7'd061, 7'd062, 7'd063, 7'd064, 7'd065, 7'd067, 7'd068, 7'd069, 7'd070, 7'd073, 7'd074, 7'd076, 7'd077, 7'd079, 7'd080, 7'd082, 7'd083, 7'd085, 7'd086, 7'd088, 7'd089, 7'd091, 7'd092, 7'd094:                         begin
                           gs_ctrl19 <= 3'd1;
                        end
                        
                        7'd003:                         begin
                           gs_ctrl19 <= 3'd2;
                        end
                        
                        7'd004:                         begin
                           gs_ctrl19 <= 3'd3;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl19 <= 3'd4;
                        end
                        
                        7'd007:                         begin
                           gs_ctrl19 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl19 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl20
            if (i_rst == 1'b0) begin
               gs_ctrl20 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd010, 7'd013, 7'd021, 7'd023, 7'd035, 7'd038, 7'd045, 7'd047, 7'd050, 7'd053, 7'd060, 7'd062, 7'd065, 7'd068, 7'd070, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092, 7'd094:                         begin
                           gs_ctrl20 <= 2'd1;
                        end
                        
                        7'd003:                         begin
                           gs_ctrl20 <= 2'd2;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl20 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl20 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx7i7c
         // resource: regr_en_ss_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl23
            if (i_rst == 1'b0) begin
               gs_ctrl23 <= 3'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd011, 7'd012, 7'd013, 7'd014, 7'd015, 7'd019, 7'd020, 7'd021, 7'd022, 7'd032, 7'd036, 7'd037, 7'd038, 7'd039, 7'd040, 7'd043, 7'd044, 7'd045, 7'd046, 7'd047, 7'd051, 7'd052, 7'd053, 7'd054, 7'd055, 7'd058, 7'd059, 7'd060, 7'd061, 7'd062, 7'd066, 7'd067, 7'd068, 7'd069, 7'd070, 7'd071, 7'd073, 7'd074, 7'd076, 7'd077, 7'd079, 7'd080, 7'd082, 7'd083, 7'd085, 7'd086, 7'd088, 7'd089, 7'd091, 7'd092, 7'd094:                         begin
                           gs_ctrl23 <= 3'd1;
                        end
                        
                        7'd003:                         begin
                           gs_ctrl23 <= 3'd2;
                        end
                        
                        7'd004:                         begin
                           gs_ctrl23 <= 3'd3;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl23 <= 3'd4;
                        end
                        
                        7'd007:                         begin
                           gs_ctrl23 <= 3'd5;
                        end
                        
                        7'd024:                         begin
                           gs_ctrl23 <= 3'd6;
                        end
                        
                        default:                         begin
                           gs_ctrl23 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_ss_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl24
            if (i_rst == 1'b0) begin
               gs_ctrl24 <= 2'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd000, 7'd012, 7'd014, 7'd020, 7'd022, 7'd037, 7'd039, 7'd044, 7'd046, 7'd052, 7'd054, 7'd059, 7'd061, 7'd067, 7'd069, 7'd071, 7'd074, 7'd077, 7'd080, 7'd083, 7'd086, 7'd089, 7'd092, 7'd094:                         begin
                           gs_ctrl24 <= 2'd1;
                        end
                        
                        7'd005, 7'd006:                         begin
                           gs_ctrl24 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl24 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl25
            if (i_rst == 1'b0) begin
               gs_ctrl25 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd007:                         begin
                           gs_ctrl25 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl25 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl27
            if (i_rst == 1'b0) begin
               gs_ctrl27 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd025, 7'd026, 7'd027, 7'd032:                         begin
                           gs_ctrl27 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl27 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl30
            if (i_rst == 1'b0) begin
               gs_ctrl30 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd015:                         begin
                           gs_ctrl30 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl30 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl34
            if (i_rst == 1'b0) begin
               gs_ctrl34 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd009, 7'd018, 7'd034, 7'd040, 7'd049, 7'd055, 7'd064:                         begin
                           gs_ctrl34 <= 2'd1;
                        end
                        
                        7'd010, 7'd017, 7'd035, 7'd042, 7'd050, 7'd057, 7'd065:                         begin
                           gs_ctrl34 <= 2'd2;
                        end
                        
                        7'd011, 7'd019, 7'd036, 7'd043, 7'd051, 7'd058, 7'd066:                         begin
                           gs_ctrl34 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl34 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_4bx9i9c
         // resource: regr_en_sc_4
         always @(posedge i_clk)
          begin :drive_gs_ctrl37
            if (i_rst == 1'b0) begin
               gs_ctrl37 <= 4'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd009, 7'd010, 7'd017, 7'd019, 7'd049, 7'd050:                         begin
                           gs_ctrl37 <= 4'd01;
                        end
                        
                        7'd033, 7'd036:                         begin
                           gs_ctrl37 <= 4'd02;
                        end
                        
                        7'd034, 7'd035, 7'd042, 7'd043:                         begin
                           gs_ctrl37 <= 4'd03;
                        end
                        
                        7'd040, 7'd041:                         begin
                           gs_ctrl37 <= 4'd04;
                        end
                        
                        7'd055, 7'd056:                         begin
                           gs_ctrl37 <= 4'd05;
                        end
                        
                        7'd057, 7'd058:                         begin
                           gs_ctrl37 <= 4'd06;
                        end
                        
                        7'd063, 7'd066:                         begin
                           gs_ctrl37 <= 4'd07;
                        end
                        
                        7'd064, 7'd065:                         begin
                           gs_ctrl37 <= 4'd08;
                        end
                        
                        default:                         begin
                           gs_ctrl37 <= 4'd00;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl40
            if (i_rst == 1'b0) begin
               gs_ctrl40 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd043, 7'd058:                         begin
                           gs_ctrl40 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl40 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl41
            if (i_rst == 1'b0) begin
               gs_ctrl41 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd010, 7'd013, 7'd021, 7'd023, 7'd035, 7'd038, 7'd045, 7'd047, 7'd050, 7'd053, 7'd060, 7'd062, 7'd065, 7'd068:                         begin
                           gs_ctrl41 <= 3'd1;
                        end
                        
                        7'd011, 7'd018, 7'd036, 7'd051, 7'd066:                         begin
                           gs_ctrl41 <= 3'd2;
                        end
                        
                        7'd012, 7'd014, 7'd020, 7'd022, 7'd037, 7'd039, 7'd044, 7'd046, 7'd052, 7'd054, 7'd059, 7'd061, 7'd067, 7'd069:                         begin
                           gs_ctrl41 <= 3'd3;
                        end
                        
                        7'd024, 7'd031:                         begin
                           gs_ctrl41 <= 3'd4;
                        end
                        
                        7'd025, 7'd026:                         begin
                           gs_ctrl41 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl41 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx8i8c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl44
            if (i_rst == 1'b0) begin
               gs_ctrl44 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd010, 7'd012, 7'd020, 7'd021, 7'd035, 7'd037, 7'd044, 7'd045, 7'd050, 7'd052, 7'd059, 7'd060, 7'd065, 7'd067:                         begin
                           gs_ctrl44 <= 3'd1;
                        end
                        
                        7'd011, 7'd018, 7'd036, 7'd051, 7'd066:                         begin
                           gs_ctrl44 <= 3'd2;
                        end
                        
                        7'd013, 7'd022, 7'd039, 7'd047, 7'd054, 7'd062, 7'd069:                         begin
                           gs_ctrl44 <= 3'd3;
                        end
                        
                        7'd014, 7'd023, 7'd025, 7'd026, 7'd038, 7'd046, 7'd053, 7'd061, 7'd068:                         begin
                           gs_ctrl44 <= 3'd4;
                        end
                        
                        7'd024:                         begin
                           gs_ctrl44 <= 3'd5;
                        end
                        
                        7'd031:                         begin
                           gs_ctrl44 <= 3'd6;
                        end
                        
                        7'd042, 7'd057:                         begin
                           gs_ctrl44 <= 3'd7;
                        end
                        
                        default:                         begin
                           gs_ctrl44 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx7i7c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl45
            if (i_rst == 1'b0) begin
               gs_ctrl45 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd010, 7'd013, 7'd020, 7'd022, 7'd025, 7'd026, 7'd037, 7'd039, 7'd044, 7'd046, 7'd050, 7'd053, 7'd059, 7'd061, 7'd065, 7'd068:                         begin
                           gs_ctrl45 <= 3'd1;
                        end
                        
                        7'd011, 7'd018, 7'd036, 7'd051, 7'd066:                         begin
                           gs_ctrl45 <= 3'd2;
                        end
                        
                        7'd012, 7'd014, 7'd021, 7'd023, 7'd035, 7'd038, 7'd045, 7'd047, 7'd052, 7'd054, 7'd060, 7'd062, 7'd067, 7'd069:                         begin
                           gs_ctrl45 <= 3'd3;
                        end
                        
                        7'd024:                         begin
                           gs_ctrl45 <= 3'd4;
                        end
                        
                        7'd031:                         begin
                           gs_ctrl45 <= 3'd5;
                        end
                        
                        7'd043, 7'd058:                         begin
                           gs_ctrl45 <= 3'd6;
                        end
                        
                        default:                         begin
                           gs_ctrl45 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i6c
         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_gs_ctrl46
            if (i_rst == 1'b0) begin
               gs_ctrl46 <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd010, 7'd013, 7'd020, 7'd022, 7'd025, 7'd026, 7'd037, 7'd039, 7'd044, 7'd046, 7'd050, 7'd053, 7'd059, 7'd061, 7'd065, 7'd068:                         begin
                           gs_ctrl46 <= 3'd1;
                        end
                        
                        7'd011, 7'd018, 7'd036, 7'd051, 7'd066:                         begin
                           gs_ctrl46 <= 3'd2;
                        end
                        
                        7'd024:                         begin
                           gs_ctrl46 <= 3'd3;
                        end
                        
                        7'd031:                         begin
                           gs_ctrl46 <= 3'd4;
                        end
                        
                        7'd043, 7'd058:                         begin
                           gs_ctrl46 <= 3'd5;
                        end
                        
                        default:                         begin
                           gs_ctrl46 <= 3'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl47
            if (i_rst == 1'b0) begin
               gs_ctrl47 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd012, 7'd021, 7'd035, 7'd044, 7'd050, 7'd059, 7'd065:                         begin
                           gs_ctrl47 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl47 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i4c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl48
            if (i_rst == 1'b0) begin
               gs_ctrl48 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd024:                         begin
                           gs_ctrl48 <= 2'd1;
                        end
                        
                        7'd032:                         begin
                           gs_ctrl48 <= 2'd2;
                        end
                        
                        7'd040:                         begin
                           gs_ctrl48 <= 2'd3;
                        end
                        
                        default:                         begin
                           gs_ctrl48 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i3c
         // resource: regr_en_sc_2
         always @(posedge i_clk)
          begin :drive_gs_ctrl49
            if (i_rst == 1'b0) begin
               gs_ctrl49 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd015:                         begin
                           gs_ctrl49 <= 2'd1;
                        end
                        
                        7'd024:                         begin
                           gs_ctrl49 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl49 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl50
            if (i_rst == 1'b0) begin
               gs_ctrl50 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        7'd022:                         begin
                           gs_ctrl50 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl50 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_real_busy
         assign i_real_busy = DFT_compute_gen_busy_r_1_2_out1[2];

         // instance: drive_i_real_m_data_is_valid
         assign i_real_m_data_is_valid = DFT_compute_gen_busy_r_1_2_out1[1];

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_out1 = {DFT_compute_gen_busy_r_1_2_gnew_busy, {DFT_compute_gen_busy_r_1_2_gdiv, DFT_compute_gen_busy_r_1_2_gen_busy_i_real_m_data_is_invalid_next}};

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gen_busy_i_real_m_data_is_invalid_next = ~DFT_compute_gen_busy_r_1_2_gdiv;

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gdiv = i_real_vld & !DFT_compute_gen_busy_r_1_2_gnew_req | i_real_m_stall_reg_full;

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gnew_busy = DFT_compute_gen_busy_r_1_2_gnew_req | i_real_m_stall_reg_full;

         // resource: DFT_compute_gen_busy_r_1  instance: DFT_compute_gen_busy_r_1_2
         assign DFT_compute_gen_busy_r_1_2_gnew_req = i_real_m_busy_req_0 & (i_real_m_unvalidated_req | i_real_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_real_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_real_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_real_m_unvalidated_req <= DFT_compute_N_Muxb_1_2_3_4_1_out1;
            end
         end

         // resource: DFT_compute_N_Muxb_1_2_3_4
         always @(i_real_vld or i_real_m_busy_req_0 or i_real_m_unvalidated_req)
          begin :DFT_compute_N_Muxb_1_2_3_4_1
            if (i_real_m_busy_req_0) begin
               DFT_compute_N_Muxb_1_2_3_4_1_out1 = i_real_m_unvalidated_req;
            end
            else begin
               DFT_compute_N_Muxb_1_2_3_4_1_out1 = i_real_vld;
            end
         end

         // resource: regr_en_1
         always @(posedge i_clk)
          begin :drive_i_real_m_stall_reg_sign
            case (DFT_compute_And_1Ux1U_1U_4_137_out1) 

               1'b1:                begin
                  i_real_m_stall_reg_sign <= i_real_data_sign;
               end
               
               1'b0:                begin
               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_i_real_m_stall_reg_exp
            case (DFT_compute_And_1Ux1U_1U_4_137_out1) 

               1'b1:                begin
                  i_real_m_stall_reg_exp <= i_real_data_exp;
               end
               
               1'b0:                begin
               end
               
            endcase

         end

         // resource: regr_en_23
         always @(posedge i_clk)
          begin :drive_i_real_m_stall_reg_man
            case (DFT_compute_And_1Ux1U_1U_4_137_out1) 

               1'b1:                begin
                  i_real_m_stall_reg_man <= i_real_data_man;
               end
               
               1'b0:                begin
               end
               
            endcase

         end

         // resource: DFT_compute_Not_1U_1U_4  instance: DFT_compute_Not_1U_1U_4_135
         assign DFT_compute_Not_1U_1U_4_135_out1 = !i_real_m_stall_reg_full;

         // resource: DFT_compute_And_1Ux1U_1U_4  instance: DFT_compute_And_1Ux1U_1U_4_136
         assign DFT_compute_And_1Ux1U_1U_4_136_out1 = i_real_m_data_is_valid & i_real_m_stalling;

         // resource: DFT_compute_And_1Ux1U_1U_4  instance: DFT_compute_And_1Ux1U_1U_4_137
         assign DFT_compute_And_1Ux1U_1U_4_137_out1 = DFT_compute_And_1Ux1U_1U_4_136_out1 & DFT_compute_Not_1U_1U_4_135_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_i_real_m_stall_reg_full
            if (i_rst == 1'b0) begin
               i_real_m_stall_reg_full <= 1'd0;
            end
            else begin
               i_real_m_stall_reg_full <= DFT_compute_And_1Ux1U_1U_4_138_out1;
            end
         end

         // resource: DFT_compute_And_1Ux1U_1U_4  instance: DFT_compute_And_1Ux1U_1U_4_138
         assign DFT_compute_And_1Ux1U_1U_4_138_out1 = i_real_m_data_is_valid & i_real_m_stalling;

         // instance: drive_o_dft_real_vld
         assign o_dft_real_vld = DFT_compute_Or_1Ux1U_1U_4_5_out1;

         // resource: DFT_compute_Or_1Ux1U_1U_4  instance: DFT_compute_Or_1Ux1U_1U_4_5
         assign DFT_compute_Or_1Ux1U_1U_4_5_out1 = o_dft_real_m_unacked_req | DFT_compute_Xor_1Ux1U_1U_1_4_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_m_unacked_req
            if (i_rst == 1'b0) begin
               o_dft_real_m_unacked_req <= 1'd0;
            end
            else begin
               o_dft_real_m_unacked_req <= DFT_compute_And_1Ux1U_1U_1_6_out1;
            end
         end

         // resource: DFT_compute_And_1Ux1U_1U_1  instance: DFT_compute_And_1Ux1U_1U_1_6
         assign DFT_compute_And_1Ux1U_1U_1_6_out1 = o_dft_real_busy & o_dft_real_vld;

         // resource: DFT_compute_Xor_1Ux1U_1U_1  instance: DFT_compute_Xor_1Ux1U_1U_1_4
         assign DFT_compute_Xor_1Ux1U_1U_1_4_out1 = o_dft_real_m_req_m_trig_req ^ o_dft_real_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_real_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_dft_real_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_dft_real_m_req_m_prev_trig_req <= o_dft_real_m_req_m_trig_req;
            end
         end

         // resource: DFT_compute_Not_1U_1U_1  instance: DFT_compute_Not_1U_1U_1_7
         assign DFT_compute_Not_1U_1U_1_7_out1 = !o_dft_real_m_req_m_trig_req;

         // instance: drive_o_dft_imag_vld
         assign o_dft_imag_vld = DFT_compute_Or_1Ux1U_1U_4_9_out1;

         // resource: DFT_compute_Or_1Ux1U_1U_4  instance: DFT_compute_Or_1Ux1U_1U_4_9
         assign DFT_compute_Or_1Ux1U_1U_4_9_out1 = o_dft_imag_m_unacked_req | DFT_compute_Xor_1Ux1U_1U_1_8_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_m_unacked_req
            if (i_rst == 1'b0) begin
               o_dft_imag_m_unacked_req <= 1'd0;
            end
            else begin
               o_dft_imag_m_unacked_req <= DFT_compute_And_1Ux1U_1U_1_10_out1;
            end
         end

         // resource: DFT_compute_And_1Ux1U_1U_1  instance: DFT_compute_And_1Ux1U_1U_1_10
         assign DFT_compute_And_1Ux1U_1U_1_10_out1 = o_dft_imag_busy & o_dft_imag_vld;

         // resource: DFT_compute_Xor_1Ux1U_1U_1  instance: DFT_compute_Xor_1Ux1U_1U_1_8
         assign DFT_compute_Xor_1Ux1U_1U_1_8_out1 = o_dft_imag_m_req_m_trig_req ^ o_dft_imag_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_dft_imag_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_dft_imag_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_dft_imag_m_req_m_prev_trig_req <= o_dft_imag_m_req_m_trig_req;
            end
         end

         // resource: DFT_compute_Not_1U_1U_1  instance: DFT_compute_Not_1U_1U_1_11
         assign DFT_compute_Not_1U_1U_1_11_out1 = !o_dft_imag_m_req_m_trig_req;


endmodule

